{"config":{"phpVersion":80030,"phpExtensions":"5b8010a553a9b9ac2f6e47cfdfb557a7","tabWidth":4,"encoding":"utf-8","recordErrors":true,"annotations":true,"configData":{"installed_paths":"..\/..\/phpcompatibility\/php-compatibility,..\/..\/phpcompatibility\/phpcompatibility-paragonie,..\/..\/phpcompatibility\/phpcompatibility-wp,..\/..\/phpcsstandards\/phpcsextra,..\/..\/phpcsstandards\/phpcsutils,..\/..\/wp-coding-standards\/wpcs","testVersion":"7.2-","minimum_supported_wp_version":"5.4.1"},"codeHash":"2cb6317abaf6a2e14dfeaf6236c2976b","rulesetHash":"9e6981cd195bdd5a826bd34661dee612"},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/templates\/template-privacy.php":{"hash":"77ba3102f3783df7ef3a003b22228f7133188","errors":{"1":{"7":[{"message":"You must use \"\/**\" style comments for a file comment","source":"Squiz.Commenting.FileComment.WrongStyle","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}],"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"4":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"6":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"7":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]}},"warnings":{"4":{"1":[{"message":"This comment is 75% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"6":{"1":[{"message":"This comment is 67% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Multiple statements on same line":{"values":{"no":2}}},"errorCount":9,"warningCount":2,"fixableCount":4,"numTokens":19},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/page.php":{"hash":"95080985d7418b015419aaa60c4253a533188","errors":{"2":{"1":[{"message":"You must use \"\/**\" style comments for a file comment","source":"Squiz.Commenting.FileComment.WrongStyle","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"18":{"20":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_with_globals'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":{"8":{"1":[{"message":"This comment is 50% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":10}},"Line indent":{"values":{"tabs":4}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Multiple statements on same line":{"values":{"no":6}},"Space after operator":{"values":{"1":5}},"Adjacent assignments aligned":{"values":{"yes":1}},"Spaces found before comma in function call":{"values":{"no spaces":2}},"Spaces found after comma in function call":{"values":{"1 space":2}},"PHP keyword case":{"values":{"lower":3}},"Control structure defined inline":{"values":{"no":1}},"Space before operator":{"values":{"1":3}}},"errorCount":3,"warningCount":1,"fixableCount":1,"numTokens":109},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/other\/wcag-main.php":{"hash":"434aebc7e1a85c3206e46df32d80c8af33188","errors":[],"warnings":{"1":{"1":[{"message":"No PHP code was found in this file and short open tags are not allowed by this install of PHP. This file may be using short open tags but PHP does not allow them.","source":"Internal.NoCodeFound","listener":"","severity":0,"fixable":false}]}},"metrics":{"PHP short open tag used":{"values":{"no":5}},"Using byte order mark":{"values":{"no":1}}},"errorCount":0,"warningCount":1,"fixableCount":0,"numTokens":5},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/other\/svg.php":{"hash":"7bf2072333d17c4d13903235edb367d133188","errors":{"2":{"11":[{"message":"You must use \"\/**\" style comments for a file comment","source":"Squiz.Commenting.FileComment.WrongStyle","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"19":{"1":[{"message":"First line of comment not aligned correctly; expected 8 spaces but found 4","source":"Squiz.Commenting.BlockComment.FirstLineIndent","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"20":{"1":[{"message":"Empty line required after block comment","source":"Squiz.Commenting.BlockComment.NoEmptyLineAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"33":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"45":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"52":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"73":{"1":[{"message":"First line of comment not aligned correctly; expected 8 spaces but found 4","source":"Squiz.Commenting.BlockComment.FirstLineIndent","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"74":{"1":[{"message":"Empty line required after block comment","source":"Squiz.Commenting.BlockComment.NoEmptyLineAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"90":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"218":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"227":{"5":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"245":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"262":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"292":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]}},"warnings":{"18":{"5":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"33":{"11":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"45":{"11":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"52":{"11":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"58":{"5":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"72":{"5":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"90":{"11":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"218":{"11":[{"message":"This comment is 53% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"227":{"5":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"245":{"11":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"262":{"11":[{"message":"This comment is 54% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"292":{"11":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"PHP short open tag used":{"values":{"no":309}},"Using byte order mark":{"values":{"no":1}},"File has doc comment":{"values":{"yes":1}},"Line indent":{"values":{"tabs":292}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}}},"errorCount":15,"warningCount":12,"fixableCount":3,"numTokens":359},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/other\/cookie_consent_dialog.php":{"hash":"67b5ef197f35cfaf9976ae05dc9a221833188","errors":{"33":{"1":[{"message":"Scripts must be registered\/enqueued via wp_enqueue_script()","source":"WordPress.WP.EnqueuedResources.NonEnqueuedScript","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\EnqueuedResourcesSniff","severity":5,"fixable":false}],"14":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}],"25":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_template_directory_uri'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected cookie-consent-dialog.php, but found cookie_consent_dialog.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"PHP short open tag used":{"values":{"no":35}},"Using byte order mark":{"values":{"no":1}},"File has doc comment":{"values":{"no":1}},"Line indent":{"values":{"tabs":26}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"PHP keyword case":{"values":{"lower":1}},"Multiple statements on same line":{"values":{"no":1}}},"errorCount":4,"warningCount":0,"fixableCount":0,"numTokens":43},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/heading_bar.php":{"hash":"ee4fac4970a24e5c494cd139c79ffd8d33188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected heading-bar.php, but found heading_bar.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"4":{"31":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['bg_theme']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"10":{"59":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['heading']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"12":{"71":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['label']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":{"4":{"100":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":21}},"Line indent":{"values":{"tabs":10}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Control structure defined inline":{"values":{"no":1}},"PHP keyword case":{"values":{"lower":7}},"Space before operator":{"values":{"1":4}},"Space after operator":{"values":{"1":4}},"Multiple statements on same line":{"values":{"no":5}},"Type of comparison used":{"values":{"loose":1}},"Ternary usage":{"values":{"long":1}},"PHP constant case":{"values":{"lower":1}}},"errorCount":5,"warningCount":1,"fixableCount":1,"numTokens":95},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/tile.php":{"hash":"3cefc0355385815e2c7e1d730652010c33188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"3":{"1":[{"message":"Overriding WordPress globals is prohibited. Found assignment to $title","source":"WordPress.WP.GlobalVariablesOverride.Prohibited","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\GlobalVariablesOverrideSniff","severity":5,"fixable":false}]},"5":{"1":[{"message":"Overriding WordPress globals is prohibited. Found assignment to $link","source":"WordPress.WP.GlobalVariablesOverride.Prohibited","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\GlobalVariablesOverrideSniff","severity":5,"fixable":false}]},"6":{"1":[{"message":"Overriding WordPress globals is prohibited. Found assignment to $id","source":"WordPress.WP.GlobalVariablesOverride.Prohibited","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\GlobalVariablesOverrideSniff","severity":5,"fixable":false}]},"11":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"52":{"35":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":77}},"Line indent":{"values":{"tabs":43}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":36}},"Adjacent assignments aligned":{"values":{"yes":2}},"PHP keyword case":{"values":{"lower":37}},"Space before operator":{"values":{"1":16}},"Ternary usage":{"values":{"long":8}},"Multiple statements on same line":{"values":{"no":38}},"Spacing before string concat":{"values":{"1":7}},"Spacing after string concat":{"values":{"1":7}},"Control structure defined inline":{"values":{"no":7}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"a new line":1}},"Space between array keyword and open brace":{"values":{"no spaces":1}},"Space after array opener, multi-line array":{"values":{"a new line":1}},"Space before array closer, multi-line array":{"values":{"a new line":1}},"Multi-line array - comma after last item":{"values":{"yes":1}},"Short array syntax used":{"values":{"no":1}},"Spaces found before comma":{"values":{"no spaces":4}},"Spaces found after comma":{"values":{"a new line":3}}},"errorCount":6,"warningCount":0,"fixableCount":1,"numTokens":707},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/small-desc-heading.php":{"hash":"16da9ee0c5f4563a9bf5b0befe14b4e633188","errors":{"4":{"5":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"5":{"74":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['desc']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"8":{"65":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['heading']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"PHP short open tag used":{"values":{"no":16}},"Using byte order mark":{"values":{"no":1}},"File has doc comment":{"values":{"no":1}},"Line indent":{"values":{"tabs":6}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Control structure defined inline":{"values":{"no":1}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":3}}},"errorCount":3,"warningCount":0,"fixableCount":0,"numTokens":57},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/button.php":{"hash":"1cbac8b84d6c12a2b69aaa42437ff3a533188","errors":{"5":{"4":[{"message":"The tag in position 1 should be the @package tag","source":"Squiz.Commenting.FileComment.PackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"8":{"2":[{"message":"Missing @subpackage tag in file comment","source":"Squiz.Commenting.FileComment.MissingSubpackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Missing @author tag in file comment","source":"Squiz.Commenting.FileComment.MissingAuthorTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"7":{"4":[{"message":"The tag in position 2 should be the @subpackage tag","source":"Squiz.Commenting.FileComment.SubpackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"19":{"21":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$url'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}],"66":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$target'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}],"109":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$class'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"20":{"16":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$icon'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"21":{"29":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$class'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"22":{"20":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$label'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":18}},"Line indent":{"values":{"tabs":4}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":20}},"Adjacent assignments aligned":{"values":{"yes":1}},"PHP keyword case":{"values":{"lower":12}},"Space before operator":{"values":{"1":14}},"Ternary usage":{"values":{"long":7}},"Multiple statements on same line":{"values":{"no":12}},"PHP constant case":{"values":{"lower":1}},"Spacing before string concat":{"values":{"1":3}},"Spacing after string concat":{"values":{"1":3}}},"errorCount":11,"warningCount":0,"fixableCount":1,"numTokens":263},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/_old\/cursor.php":{"hash":"377eba2d91fb5e02cb30091b8c4ac0e733188","errors":{"1":{"7":[{"message":"You must use \"\/**\" style comments for a file comment","source":"Squiz.Commenting.FileComment.WrongStyle","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}],"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":26}},"Line indent":{"values":{"tabs":16}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}}},"errorCount":3,"warningCount":0,"fixableCount":1,"numTokens":29},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/_old\/mobile-bar.php":{"hash":"d628bf01a1edc68625a4eca2f60e84c833188","errors":{"1":{"7":[{"message":"You must use \"\/**\" style comments for a file comment","source":"Squiz.Commenting.FileComment.WrongStyle","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}],"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":28}},"Line indent":{"values":{"tabs":22}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}}},"errorCount":3,"warningCount":0,"fixableCount":1,"numTokens":31},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/cf7-forms\/quote_form_110.php":{"hash":"96d323d48099cadadb8b008967ea5b7a33188","errors":[],"warnings":{"1":{"1":[{"message":"No PHP code was found in this file and short open tags are not allowed by this install of PHP. This file may be using short open tags but PHP does not allow them.","source":"Internal.NoCodeFound","listener":"","severity":0,"fixable":false}]}},"metrics":{"PHP short open tag used":{"values":{"no":33}},"Using byte order mark":{"values":{"no":1}}},"errorCount":0,"warningCount":1,"fixableCount":0,"numTokens":33},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/main-page\/hero.php":{"hash":"e3d1e84fa014322c748427afce6a2e9e33188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"10":{"25":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"25":{"50":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$heading_value'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"31":{"17":[{"message":"First line of embedded PHP code must be indented 12 spaces; 16 found","source":"Squiz.PHP.EmbeddedPhp.Indent","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\EmbeddedPhpSniff","severity":0,"fixable":true}]}},"warnings":{"31":{"17":[{"message":"This comment is 53% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":22}},"Line indent":{"values":{"tabs":19}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":11}},"Adjacent assignments aligned":{"values":{"yes":2}},"Multiple statements on same line":{"values":{"no":8}},"Spaces found before comma in function call":{"values":{"no spaces":2}},"Spaces found after comma in function call":{"values":{"1 space":2}},"Space before operator":{"values":{"1":1}},"Space between array keyword and open brace":{"values":{"no spaces":1}},"Space after array opener, multi-line array":{"values":{"a new line":1}},"Space before array closer, multi-line array":{"values":{"a new line":1}},"Multi-line array - comma after last item":{"values":{"yes":1}},"Short array syntax used":{"values":{"no":1}},"PHP keyword case":{"values":{"lower":2}},"Spaces found before comma":{"values":{"no spaces":3}},"Spaces found after comma":{"values":{"a new line":2}}},"errorCount":4,"warningCount":1,"fixableCount":2,"numTokens":158},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/main-page\/services.php":{"hash":"53036f75d7526fe05afe961f1edb3ef733188","errors":{"6":{"2":[{"message":"Missing @subpackage tag in file comment","source":"Squiz.Commenting.FileComment.MissingSubpackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"28":{"12":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'splide_script_async'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"45":{"25":[{"message":"Overriding WordPress globals is prohibited. Found assignment to $title","source":"WordPress.WP.GlobalVariablesOverride.Prohibited","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\GlobalVariablesOverrideSniff","severity":5,"fixable":false}]},"50":{"32":[{"message":"Usage of Yoda conditions is not allowed; switch the expression order","source":"Generic.ControlStructures.DisallowYodaConditions.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\ControlStructures\\DisallowYodaConditionsSniff","severity":5,"fixable":false}]},"96":{"66":[{"message":"Using an unparenthesized expression containing a \".\" before a \"+\" or \"-\" has been deprecated in PHP 7.4 and removed in PHP 8.0","source":"PHPCompatibility.Operators.ChangedConcatOperatorPrecedence.Found","listener":"PHPCompatibility\\Sniffs\\Operators\\ChangedConcatOperatorPrecedenceSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":163}},"Line indent":{"values":{"tabs":154}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":18}},"Adjacent assignments aligned":{"values":{"yes":3}},"Space before operator":{"values":{"1":9}},"Ternary usage":{"values":{"long":2}},"Multiple statements on same line":{"values":{"no":22}},"Control structure defined inline":{"values":{"no":6}},"PHP keyword case":{"values":{"lower":17}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Type of comparison used":{"values":{"strict":1}},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}}},"errorCount":6,"warningCount":0,"fixableCount":1,"numTokens":556},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions.php":{"hash":"9fe54af3e652c32adc12e74751f24d3a33188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"8":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"9":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"13":{"1":[{"message":"Block comments must be started with \/*","source":"Squiz.Commenting.BlockComment.WrongStart","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"24":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"26":{"1":[{"message":"Block comments must be started with \/*","source":"Squiz.Commenting.BlockComment.WrongStart","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]}},"warnings":{"8":{"1":[{"message":"This comment is 60% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"24":{"1":[{"message":"This comment is 75% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"PHP keyword case":{"values":{"lower":17}},"Multiple statements on same line":{"values":{"no":17}}},"errorCount":7,"warningCount":2,"fixableCount":2,"numTokens":123},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/404.php":{"hash":"3c1eab9342af71adc3435cc91a28cf4b33188","errors":{"1":{"1":[{"message":"There must be no blank lines before the file comment","source":"Squiz.Commenting.FileComment.SpacingAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"8":{"2":[{"message":"Missing @subpackage tag in file comment","source":"Squiz.Commenting.FileComment.MissingSubpackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":14}},"Line indent":{"values":{"tabs":12}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Multiple statements on same line":{"values":{"no":8}},"Space after operator":{"values":{"1":10}},"Control structure defined inline":{"values":{"no":3}},"PHP keyword case":{"values":{"lower":5}},"Adjacent assignments aligned":{"values":{"yes":1}},"Spaces found before comma in function call":{"values":{"no spaces":6}},"Spaces found after comma in function call":{"values":{"1 space":6}},"Space before operator":{"values":{"1":6}}},"errorCount":3,"warningCount":0,"fixableCount":1,"numTokens":210},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/index.php":{"hash":"49992e669cec08150825b9cdfd2de54f33188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"8":{"106":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_field'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":16}},"Line indent":{"values":{"tabs":7}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Multiple statements on same line":{"values":{"no":3}},"PHP keyword case":{"values":{"lower":1}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"1 space":1}}},"errorCount":2,"warningCount":0,"fixableCount":0,"numTokens":41},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/single-service.php":{"hash":"92aff9f3ddda7c76860dc7d484e47d6c33188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Multiple statements on same line":{"values":{"no":3}}},"errorCount":2,"warningCount":0,"fixableCount":1,"numTokens":19},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/header.php":{"hash":"65ce6b7159220e852aa7bacfe0484ff733188","errors":{"2":{"7":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"21":{"5":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"25":{"5":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"29":{"5":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"45":{"5":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"46":{"5":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"49":{"5":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"51":{"5":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]}},"warnings":{"45":{"5":[{"message":"This comment is 67% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"49":{"5":[{"message":"This comment is 80% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"PHP short open tag used":{"values":{"no":55}},"Using byte order mark":{"values":{"no":1}},"File has doc comment":{"values":{"no":1}},"Line indent":{"values":{"tabs":39}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Multiple statements on same line":{"values":{"no":25}},"PHP keyword case":{"values":{"lower":11}},"Spaces found before comma in function call":{"values":{"no spaces":2}},"Spaces found after comma in function call":{"values":{"1 space":2}},"Control structure defined inline":{"values":{"no":1}}},"errorCount":11,"warningCount":2,"fixableCount":6,"numTokens":361},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/other\/breadcrumb.php":{"hash":"03e28b047c93cc7acbf9fd01318d8f1733188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":11}},"Line indent":{"values":{"tabs":5}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":5}},"PHP keyword case":{"values":{"lower":3}},"Space before operator":{"values":{"1":4}},"Ternary usage":{"values":{"long":2}},"PHP constant case":{"values":{"lower":1}},"Multiple statements on same line":{"values":{"no":3}}},"errorCount":1,"warningCount":0,"fixableCount":0,"numTokens":63},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/heading-double-desc.php":{"hash":"50ddc7e4223936ae7da9c4e2e8e346aa33188","errors":{"6":{"2":[{"message":"There must be exactly one blank line after the file comment","source":"Squiz.Commenting.FileComment.SpacingAfterComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Missing @package tag in file comment","source":"Squiz.Commenting.FileComment.MissingPackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Missing @subpackage tag in file comment","source":"Squiz.Commenting.FileComment.MissingSubpackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Missing @author tag in file comment","source":"Squiz.Commenting.FileComment.MissingAuthorTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Missing @copyright tag in file comment","source":"Squiz.Commenting.FileComment.MissingCopyrightTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"3":{"4":[{"message":"The tag in position 1 should be the @package tag","source":"Squiz.Commenting.FileComment.PackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"4":{"4":[{"message":"The tag in position 2 should be the @subpackage tag","source":"Squiz.Commenting.FileComment.SubpackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"5":{"4":[{"message":"The tag in position 3 should be the @author tag","source":"Squiz.Commenting.FileComment.AuthorTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"2":{"1":[{"message":"Missing short description in doc comment","source":"Generic.Commenting.DocComment.MissingShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"10":{"43":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['tiny_title']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"13":{"68":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['heading']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"16":{"61":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['desc']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":20}},"Line indent":{"values":{"tabs":9}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":4}},"Control structure defined inline":{"values":{"no":1}}},"errorCount":14,"warningCount":0,"fixableCount":2,"numTokens":97},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/heading-img-desc-btn.php":{"hash":"6bfa954ceb3021447520b630d928f5b933188","errors":{"3":{"1":[{"message":"You must use \"\/**\" style comments for a file comment","source":"Squiz.Commenting.FileComment.WrongStyle","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"10":{"50":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['img']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"13":{"79":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['heading']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"16":{"66":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['desc']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"20":{"68":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['btn']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":{"3":{"1":[{"message":"This comment is 60% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":32}},"Line indent":{"values":{"tabs":15}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"PHP keyword case":{"values":{"lower":7}},"Multiple statements on same line":{"values":{"no":5}},"Control structure defined inline":{"values":{"no":1}}},"errorCount":6,"warningCount":1,"fixableCount":1,"numTokens":95},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/heading_desc_btn.php":{"hash":"6c53a90eaeea45b4520d0c11271093fc33188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected heading-desc-btn.php, but found heading_desc_btn.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false}]},"3":{"50":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}],"61":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['heading']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"6":{"63":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['desc']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"PHP short open tag used":{"values":{"no":22}},"Using byte order mark":{"values":{"no":1}},"File has doc comment":{"values":{"no":1}},"Line indent":{"values":{"tabs":12}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":3}},"Control structure defined inline":{"values":{"no":1}}},"errorCount":4,"warningCount":0,"fixableCount":0,"numTokens":63},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/navigation.php":{"hash":"747298d163caa8562efbe901278d801033188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"13":{"26":[{"message":"Usage of Yoda conditions is not allowed; switch the expression order","source":"Generic.ControlStructures.DisallowYodaConditions.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\ControlStructures\\DisallowYodaConditionsSniff","severity":5,"fixable":false}]},"33":{"21":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"56":{"1":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]}},"warnings":{"41":{"17":[{"message":"This comment is 65% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":41}},"Line indent":{"values":{"tabs":33}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":17}},"Adjacent assignments aligned":{"values":{"yes":1}},"Spaces found before comma in function call":{"values":{"no spaces":7}},"Spaces found after comma in function call":{"values":{"1 space":7}},"Multiple statements on same line":{"values":{"no":11}},"Spacing before string concat":{"values":{"1":3}},"Spacing after string concat":{"values":{"1":3}},"Spacing before object operator":{"values":[5]},"Spacing after object operator":{"values":[5]},"Space before operator":{"values":{"1":7}},"PHP keyword case":{"values":{"lower":10}},"Control structure defined inline":{"values":{"no":2}},"Type of comparison used":{"values":{"strict":1}},"Space between array keyword and open brace":{"values":{"no spaces":1}},"Space after array opener, multi-line array":{"values":{"a new line":1}},"Space before array closer, multi-line array":{"values":{"a new line":1}},"Multi-line array - comma after last item":{"values":{"yes":1}},"Short array syntax used":{"values":{"no":1}},"Spaces found before comma":{"values":{"no spaces":4}},"Spaces found after comma":{"values":{"a new line":3}},"PHP constant case":{"values":{"lower":1}}},"errorCount":4,"warningCount":1,"fixableCount":2,"numTokens":327},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/google_map_bar.php":{"hash":"ae29c94427be5fbdfbcff78f145fd38033188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected google-map-bar.php, but found google_map_bar.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"12":{"62":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_template_directory_uri'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"14":{"71":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['desc']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"18":{"14":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '\"<{$button->tag} class='btn--big {$button->GetButtonClasses()}' {$button->GetLinkAttributes()}><span class='btn__label'>{$button->label}<\/span><\/{$button->tag}>\"'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false},{"message":"Variable \"$button\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false},{"message":"Variable \"$button\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false},{"message":"Variable \"$button\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false},{"message":"Variable \"$button\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false},{"message":"Variable \"$button\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]}},"warnings":{"1":{"1":[{"message":"File has mixed line endings; this may cause incorrect results","source":"Internal.LineEndings.Mixed","listener":"","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":16}},"Line indent":{"values":{"tabs":12}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Control structure defined inline":{"values":{"no":2}},"PHP keyword case":{"values":{"lower":7}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"1 space":1}},"PHP constant case":{"values":{"lower":1}},"Multiple statements on same line":{"values":{"no":6}},"Space after operator":{"values":{"1":1}},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":10,"warningCount":1,"fixableCount":0,"numTokens":107},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/components\/heading_desc.php":{"hash":"568f12fcc2ef8214258b201ecd9489f133188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected heading-desc.php, but found heading_desc.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false}]},"3":{"54":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}],"65":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['heading']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"6":{"63":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$args['desc']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"PHP short open tag used":{"values":{"no":16}},"Using byte order mark":{"values":{"no":1}},"File has doc comment":{"values":{"no":1}},"Line indent":{"values":{"tabs":6}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":3}},"Control structure defined inline":{"values":{"no":1}}},"errorCount":4,"warningCount":0,"fixableCount":0,"numTokens":57},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/footer.php":{"hash":"8cf20376f9a55f14c97477b9372bc05933188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"12":{"1":[{"message":"The file header must be the first content in the file","source":"PSR12.Files.FileHeader.HeaderPosition","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":false},{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"13":{"37":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true},{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"1":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]},"18":{"1":[{"message":"Blank line found at end of embedded PHP content","source":"Squiz.PHP.EmbeddedPhp.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\EmbeddedPhpSniff","severity":0,"fixable":true}]},"14":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"16":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"33":{"34":[{"message":"Usage of Yoda conditions is not allowed; switch the expression order","source":"Generic.ControlStructures.DisallowYodaConditions.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\ControlStructures\\DisallowYodaConditionsSniff","severity":5,"fixable":false}]},"38":{"35":[{"message":"Assignments must be the first block of code on a line","source":"Squiz.PHP.DisallowMultipleAssignments.FoundInControlStructure","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\DisallowMultipleAssignmentsSniff","severity":5,"fixable":false}]},"40":{"71":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_with_globals'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"49":{"29":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"67":{"59":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_dev_display_year'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}],"110":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_field'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":{"14":{"1":[{"message":"This comment is 62% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"25":{"77":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"38":{"35":[{"message":"Variable assignment found within a condition. Did you mean to do a comparison ?","source":"Generic.CodeAnalysis.AssignmentInCondition.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\CodeAnalysis\\AssignmentInConditionSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":55}},"Line indent":{"values":{"tabs":43}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":21}},"Adjacent assignments aligned":{"values":{"yes":3}},"Spaces found before comma in function call":{"values":{"no spaces":9}},"Spaces found after comma in function call":{"values":{"1 space":9}},"Multiple statements on same line":{"values":{"no":18}},"PHP keyword case":{"values":{"lower":19}},"Control structure defined inline":{"values":{"no":6}},"Space before operator":{"values":{"1":8}},"Type of comparison used":{"values":{"loose":1,"strict":1}},"PHP constant case":{"values":{"lower":2}},"Spacing before string concat":{"values":{"1":2}},"Spacing after string concat":{"values":{"1":2}},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]},"Space between array keyword and open brace":{"values":{"no spaces":1}},"Space after array opener, multi-line array":{"values":{"a new line":1}},"Space before array closer, multi-line array":{"values":{"a new line":1}},"Multi-line array - comma after last item":{"values":{"yes":1}},"Short array syntax used":{"values":{"no":1}},"Spaces found before comma":{"values":{"no spaces":4}},"Spaces found after comma":{"values":{"a new line":3}}},"errorCount":16,"warningCount":3,"fixableCount":8,"numTokens":446},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/acf_config.php":{"hash":"b14f709fb9022631847fc15a47ff550733188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected acf-config.php, but found acf_config.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"5":{"9":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":7}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Control structure defined inline":{"values":{"no":1}},"PHP keyword case":{"values":{"lower":2}},"Space between array keyword and open brace":{"values":{"no spaces":1}},"Space after array opener, multi-line array":{"values":{"a new line":1}},"Space before array closer, multi-line array":{"values":{"a new line":1}},"Multi-line array - comma after last item":{"values":{"yes":1}},"Short array syntax used":{"values":{"no":1}},"Space after operator":{"values":{"1":3}},"Spaces found before comma":{"values":{"no spaces":3}},"Spaces found after comma":{"values":{"a new line":2}},"Multiple statements on same line":{"values":{"no":1}}},"errorCount":3,"warningCount":0,"fixableCount":1,"numTokens":58},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/html_compression.php":{"hash":"b57093f5750fee1e7e719954112317b533188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected html-compression.php, but found html_compression.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":4}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"PHP keyword case":{"values":{"lower":4}},"Multiple statements on same line":{"values":{"no":3}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"a new line":1}},"Closure opening brace placement":{"values":{"same line":1}}},"errorCount":2,"warningCount":0,"fixableCount":0,"numTokens":54},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/html-compression\/FLHM_HTML_Compression.php":{"hash":"64d1c96922ff3161e2d269a29fe52fa133188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected flhm-html-compression.php, but found FLHM_HTML_Compression.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Class file names should be based on the class name with \"class-\" prepended. Expected class-flhm-html-compression.php, but found FLHM_HTML_Compression.php.","source":"WordPress.Files.FileName.InvalidClassFileName","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"90":{"1":[{"message":"Expected \/\/end class","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"3":{"1":[{"message":"Missing doc comment for class FLHM_HTML_Compression","source":"Squiz.Commenting.ClassComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClassCommentSniff","severity":0,"fixable":false}],"29":[{"message":"Opening brace of a class must be on the line after the definition","source":"PSR2.Classes.ClassDeclaration.OpenBraceNewLine","listener":"PHP_CodeSniffer\\Standards\\PSR2\\Sniffs\\Classes\\ClassDeclarationSniff","severity":0,"fixable":true}]},"5":{"15":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"6":{"15":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"7":{"15":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"8":{"15":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"9":{"15":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"15":{"5":[{"message":"Expected \/\/end __construct()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"11":{"12":[{"message":"Missing doc comment for function __construct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"42":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"19":{"5":[{"message":"Expected \/\/end __toString()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"17":{"12":[{"message":"Missing doc comment for function __toString()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"34":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"21":{"12":[{"message":"Method name \"flhm_parseHTML\" in class FLHM_HTML_Compression is not in snake case format, try \"flhm_parse_h_t_m_l\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function flhm_parseHTML()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"45":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"26":{"5":[{"message":"Expected \/\/end flhm_parseHTML()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"23":{"9":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"25":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"28":{"15":[{"message":"Method name \"flhm_bottomComment\" in class FLHM_HTML_Compression is not in snake case format, try \"flhm_bottom_comment\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function flhm_bottomComment()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"64":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"35":{"5":[{"message":"Expected \/\/end flhm_bottomComment()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"37":{"15":[{"message":"Method name \"flhm_minifyHTML\" in class FLHM_HTML_Compression is not in snake case format, try \"flhm_minify_h_t_m_l\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function flhm_minifyHTML()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"49":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"77":{"5":[{"message":"Expected \/\/end flhm_minifyHTML()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"79":{"15":[{"message":"Method name \"flhm_removeWhiteSpace\" in class FLHM_HTML_Compression is not in snake case format, try \"flhm_remove_white_space\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function flhm_removeWhiteSpace()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"54":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"89":{"5":[{"message":"Expected \/\/end flhm_removeWhiteSpace()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]}},"warnings":{"23":{"9":[{"message":"This comment is 56% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"51":{"37":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"55":{"52":[{"message":"Loose comparisons are not allowed. Expected: \"!==\"; Found: \"!=\"","source":"Universal.Operators.StrictComparisons.LooseNotEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"59":{"29":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}],"46":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"61":{"29":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}],"47":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":76}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Only OO structure(s)":1}},"Class has doc comment":{"values":{"no":1}},"PHP keyword case":{"values":{"lower":42}},"Class opening brace placement":{"values":{"same line":1}},"Space after operator":{"values":{"1":52}},"Adjacent assignments aligned":{"values":{"yes":6}},"PHP constant case":{"values":{"lower":10}},"Multiple statements on same line":{"values":{"no":40}},"Function has doc comment":{"values":{"no":6}},"Function opening brace placement":{"values":{"same line":6}},"Control structure defined inline":{"values":{"no":14}},"Space before operator":{"values":{"1":20}},"Spacing before object operator":{"values":[8]},"Spacing after object operator":{"values":[8]},"Spaces found before comma in function declaration":{"values":{"no spaces":1}},"Spaces found after comma in function declaration":{"values":{"1 space":1}},"Spaces found before comma in function call":{"values":{"no spaces":21}},"Spaces found after comma in function call":{"values":{"1 space":21}},"Spacing before string concat":{"values":{"1":6}},"Spacing after string concat":{"values":{"1":6}},"Ternary usage":{"values":{"long":1}},"Use of ELSE IF or ELSEIF":{"values":{"elseif":6}},"Type of comparison used":{"values":{"loose":6}}},"errorCount":35,"warningCount":7,"fixableCount":20,"numTokens":927},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/disable_emojis.php":{"hash":"620e0d46e939dd36dd4175442ffb4c5b33188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected disable-emojis.php, but found disable_emojis.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":10}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Spaces found before comma in function call":{"values":{"no spaces":9}},"Spaces found after comma in function call":{"values":{"a new line":1,"1 space":8}},"Closure opening brace placement":{"values":{"same line":1}},"PHP keyword case":{"values":{"lower":1}},"Multiple statements on same line":{"values":{"no":8}}},"errorCount":2,"warningCount":0,"fixableCount":0,"numTokens":110},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/acf_validator.php":{"hash":"482acdcb6b0eaf6542049ad8eb67baab33188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected acf-validator.php, but found acf_validator.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"4":{"26":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '_'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false},{"message":"Found single-underscore \"_()\" function when double-underscore expected.","source":"WordPress.WP.I18n.SingleUnderscoreGetTextFunction","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\I18nSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Control structure defined inline":{"values":{"no":1}},"PHP keyword case":{"values":{"lower":3}},"Space before operator":{"values":{"1":1}},"Space after operator":{"values":{"1":1}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"1 space":1}},"Multiple statements on same line":{"values":{"no":1}}},"errorCount":4,"warningCount":0,"fixableCount":0,"numTokens":42},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/main-page\/sp.php":{"hash":"4e94b569f1069f78ebe71dcae6e58dfe33188","errors":{"5":{"4":[{"message":"The tag in position 1 should be the @package tag","source":"Squiz.Commenting.FileComment.PackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"8":{"2":[{"message":"Missing @subpackage tag in file comment","source":"Squiz.Commenting.FileComment.MissingSubpackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Missing @author tag in file comment","source":"Squiz.Commenting.FileComment.MissingAuthorTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"7":{"4":[{"message":"The tag in position 2 should be the @subpackage tag","source":"Squiz.Commenting.FileComment.SubpackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"10":{"9":[{"message":"Short array syntax is not allowed","source":"Universal.Arrays.DisallowShortArraySyntax.Found","listener":"PHPCSExtra\\Universal\\Sniffs\\Arrays\\DisallowShortArraySyntaxSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":178}},"Line indent":{"values":{"tabs":165}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":11}},"Space after array opener, multi-line array":{"values":{"a new line":1}},"Space before array closer, multi-line array":{"values":{"a new line":1}},"Multi-line array - comma after last item":{"values":{"yes":1}},"Short array syntax used":{"values":{"yes":1}},"Spaces found before comma":{"values":{"no spaces":3}},"Spaces found after comma":{"values":{"a new line":2}},"Multiple statements on same line":{"values":{"no":20}},"Adjacent assignments aligned":{"values":{"yes":2}},"PHP keyword case":{"values":{"lower":11}},"Control structure defined inline":{"values":{"no":2}},"Spacing before object operator":{"values":[4]},"Spacing after object operator":{"values":[4]},"Spaces found before comma in function call":{"values":{"no spaces":2}},"Spaces found after comma in function call":{"values":{"1 space":2}}},"errorCount":6,"warningCount":0,"fixableCount":2,"numTokens":496},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/main-page\/contact.php":{"hash":"b8ac3ae4b2397252244072efca29125033188","errors":{"1":{"1":[{"message":"There must be no blank lines before the file comment","source":"Squiz.Commenting.FileComment.SpacingAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false}]},"5":{"2":[{"message":"There must be exactly one blank line after the file comment","source":"Squiz.Commenting.FileComment.SpacingAfterComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Missing @package tag in file comment","source":"Squiz.Commenting.FileComment.MissingPackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"3":{"1":[{"message":"Doc comment is empty","source":"Generic.Commenting.DocComment.Empty","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"6":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"19":{"1":[{"message":"Overriding WordPress globals is prohibited. Found assignment to $map","source":"WordPress.WP.GlobalVariablesOverride.Prohibited","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\GlobalVariablesOverrideSniff","severity":5,"fixable":false}]},"77":{"49":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$social_media_links['facebook']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"86":{"49":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$social_media_links['instagram']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"95":{"49":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$social_media_links['tiktok']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":139}},"Line indent":{"values":{"tabs":81}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":19}},"Adjacent assignments aligned":{"values":{"yes":1}},"Spaces found before comma in function call":{"values":{"no spaces":9}},"Spaces found after comma in function call":{"values":{"1 space":9}},"Multiple statements on same line":{"values":{"no":41}},"Control structure defined inline":{"values":{"no":11}},"PHP keyword case":{"values":{"lower":40}},"Space before operator":{"values":{"1":4}}},"errorCount":11,"warningCount":0,"fixableCount":1,"numTokens":729},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/main-page\/services-backup.php":{"hash":"be89fae6f21fec7749d0be82c77ebff933188","errors":{"6":{"2":[{"message":"Missing @subpackage tag in file comment","source":"Squiz.Commenting.FileComment.MissingSubpackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"28":{"12":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'splide_script_async'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"45":{"25":[{"message":"Overriding WordPress globals is prohibited. Found assignment to $title","source":"WordPress.WP.GlobalVariablesOverride.Prohibited","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\GlobalVariablesOverrideSniff","severity":5,"fixable":false}]},"49":{"32":[{"message":"Usage of Yoda conditions is not allowed; switch the expression order","source":"Generic.ControlStructures.DisallowYodaConditions.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\ControlStructures\\DisallowYodaConditionsSniff","severity":5,"fixable":false}]},"79":{"66":[{"message":"Using an unparenthesized expression containing a \".\" before a \"+\" or \"-\" has been deprecated in PHP 7.4 and removed in PHP 8.0","source":"PHPCompatibility.Operators.ChangedConcatOperatorPrecedence.Found","listener":"PHPCompatibility\\Sniffs\\Operators\\ChangedConcatOperatorPrecedenceSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":119}},"Line indent":{"values":{"tabs":120}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":18}},"Adjacent assignments aligned":{"values":{"yes":2}},"Space before operator":{"values":{"1":10}},"Ternary usage":{"values":{"long":2}},"Multiple statements on same line":{"values":{"no":23}},"Control structure defined inline":{"values":{"no":7}},"PHP keyword case":{"values":{"lower":20}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Type of comparison used":{"values":{"strict":2}},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}}},"errorCount":6,"warningCount":0,"fixableCount":1,"numTokens":521},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/main-page\/about.php":{"hash":"c7e3fa9627125be7faee9b4cc598a1b533188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"17":{"90":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$box_heading'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"18":{"78":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$box_desc'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"29":{"83":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$note['desc']'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":66}},"Line indent":{"values":{"tabs":48}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":9}},"Adjacent assignments aligned":{"values":{"yes":1}},"Multiple statements on same line":{"values":{"no":13}},"Spaces found before comma in function call":{"values":{"no spaces":2}},"Spaces found after comma in function call":{"values":{"1 space":2}},"Control structure defined inline":{"values":{"no":2}},"PHP keyword case":{"values":{"lower":8}},"Space before operator":{"values":{"1":2}}},"errorCount":4,"warningCount":0,"fixableCount":0,"numTokens":241},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/main-page\/testimionials.php":{"hash":"d29a608f3e3aee6f4f38c406f64e803833188","errors":{"1":{"1":[{"message":"There must be no blank lines before the file comment","source":"Squiz.Commenting.FileComment.SpacingAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false}]},"6":{"4":[{"message":"The tag in position 1 should be the @package tag","source":"Squiz.Commenting.FileComment.PackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"9":{"2":[{"message":"Missing @subpackage tag in file comment","source":"Squiz.Commenting.FileComment.MissingSubpackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Missing @author tag in file comment","source":"Squiz.Commenting.FileComment.MissingAuthorTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"8":{"4":[{"message":"The tag in position 2 should be the @subpackage tag","source":"Squiz.Commenting.FileComment.SubpackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"12":{"1":[{"message":"Overriding WordPress globals is prohibited. Found assignment to $title","source":"WordPress.WP.GlobalVariablesOverride.Prohibited","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\GlobalVariablesOverrideSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":58}},"Line indent":{"values":{"tabs":48}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":13}},"Adjacent assignments aligned":{"values":{"yes":1}},"Multiple statements on same line":{"values":{"no":17}},"Spaces found before comma in function call":{"values":{"no spaces":9}},"Spaces found after comma in function call":{"values":{"1 space":9}},"PHP keyword case":{"values":{"lower":9}},"Control structure defined inline":{"values":{"no":2}},"Space before operator":{"values":{"1":2}},"Spacing between in\/decrementor and variable":{"values":[2]}},"errorCount":6,"warningCount":0,"fixableCount":0,"numTokens":369},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/template-parts\/flexible.php":{"hash":"a099bd62b6e797651aa0fd8a4c66d9f333188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"2":{"1":[{"message":"Overriding WordPress globals is prohibited. Found assignment to $term","source":"WordPress.WP.GlobalVariablesOverride.Prohibited","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\GlobalVariablesOverrideSniff","severity":5,"fixable":false}]},"3":{"1":[{"message":"Variable \"$fileName\" is not in valid snake_case format, try \"$file_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"4":{"1":[{"message":"Variable \"$templateName\" is not in valid snake_case format, try \"$template_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"30":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}],"64":[{"message":"Variable \"$fileName\" is not in valid snake_case format, try \"$file_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"6":{"1":[{"message":"Variable \"$flexibleName\" is not in valid snake_case format, try \"$flexible_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"31":[{"message":"Variable \"$templateName\" is not in valid snake_case format, try \"$template_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"7":{"1":[{"message":"Overriding WordPress globals is prohibited. Found assignment to $path","source":"WordPress.WP.GlobalVariablesOverride.Prohibited","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\GlobalVariablesOverrideSniff","severity":5,"fixable":false}],"37":[{"message":"Variable \"$templateName\" is not in valid snake_case format, try \"$template_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"9":{"17":[{"message":"Variable \"$flexibleName\" is not in valid snake_case format, try \"$flexible_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"10":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]},"13":{"24":[{"message":"Variable \"$flexibleName\" is not in valid snake_case format, try \"$flexible_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"18":{"74":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$value'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"25":{"11":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":false}]}},"warnings":{"10":{"11":[{"message":"This comment is 43% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"18":{"13":[{"message":"trigger_error() found. Debug code should not normally be used in production.","source":"WordPress.PHP.DevelopmentFunctions.error_log_trigger_error","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\DevelopmentFunctionsSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":11}},"Line indent":{"values":{"tabs":13}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Space after operator":{"values":{"1":6}},"Adjacent assignments aligned":{"values":{"yes":2}},"Multiple statements on same line":{"values":{"no":10}},"Space between array keyword and open brace":{"values":{"no spaces":1}},"Space after array opener, single line array":{"values":{"1 space":1}},"Space before array closer, single line array":{"values":{"1 space":1}},"Single-line array - comma after last item":{"values":{"no":1}},"Short array syntax used":{"values":{"no":1}},"PHP keyword case":{"values":{"lower":6}},"Spaces found before comma":{"values":{"no spaces":1}},"Spaces found after comma":{"values":{"1 space":1}},"Spaces found before comma in function call":{"values":{"no spaces":4}},"Spaces found after comma in function call":{"values":{"1 space":4}},"Spacing before string concat":{"values":{"1":7}},"Spacing after string concat":{"values":{"1":7}},"Control structure defined inline":{"values":{"no":3}}},"errorCount":15,"warningCount":2,"fixableCount":1,"numTokens":216},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/ls_force_cache.php":{"hash":"d9e616ce3eb7c7c82a010960a8c9b9ec33188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected ls-force-cache.php, but found ls_force_cache.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"2":{"1":[{"message":"You must use \"\/**\" style comments for a file comment","source":"Squiz.Commenting.FileComment.WrongStyle","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"3":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]}},"warnings":{"2":{"1":[{"message":"This comment is 61% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"1 space":1}},"Multiple statements on same line":{"values":{"no":1}}},"errorCount":6,"warningCount":1,"fixableCount":2,"numTokens":15},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/majkelimages-1.7.0\/init.php":{"hash":"172b7ad4ac269be82a0913d37859342a33188","errors":{"1":{"1":[{"message":"There must be no blank lines before the file comment","source":"Squiz.Commenting.FileComment.SpacingAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false}]},"8":{"4":[{"message":"Expected \"Squiz Pty Ltd <products@squiz.net>\" for author tag","source":"Squiz.Commenting.FileComment.IncorrectAuthor","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":true},{"message":"The tag in position 2 should be the @subpackage tag","source":"Squiz.Commenting.FileComment.SubpackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}],"11":[{"message":"Tag value for @author tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]},"10":{"2":[{"message":"Missing @package tag in file comment","source":"Squiz.Commenting.FileComment.MissingPackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Missing @subpackage tag in file comment","source":"Squiz.Commenting.FileComment.MissingSubpackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Missing @copyright tag in file comment","source":"Squiz.Commenting.FileComment.MissingCopyrightTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"7":{"4":[{"message":"The tag in position 1 should be the @package tag","source":"Squiz.Commenting.FileComment.PackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"9":{"4":[{"message":"The tag in position 3 should be the @author tag","source":"Squiz.Commenting.FileComment.AuthorTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}],"8":[{"message":"Tag value for @see tag indented incorrectly; expected 5 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Control structure defined inline":{"values":{"no":1}},"PHP keyword case":{"values":{"lower":6}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"1 space":1}},"Space before operator":{"values":{"1":1}},"Space after operator":{"values":{"1":1}},"Multiple statements on same line":{"values":{"no":4}}},"errorCount":10,"warningCount":0,"fixableCount":3,"numTokens":96},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/disable_posts.php":{"hash":"7167763717d0044d38914f1301ea9b8433188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected disable-posts.php, but found disable_posts.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":14}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Spaces found before comma in function call":{"values":{"no spaces":7}},"Spaces found after comma in function call":{"values":{"a new line":5,"1 space":2}},"Closure opening brace placement":{"values":{"same line":3}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":6}},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":3,"warningCount":0,"fixableCount":1,"numTokens":112},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/yoast_config.php":{"hash":"c4380503fa2ad75a8b563a900521d40133188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected yoast-config.php, but found yoast_config.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":4}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"a new line":1}},"Closure opening brace placement":{"values":{"same line":1}},"PHP keyword case":{"values":{"lower":2}},"Spacing before string concat":{"values":{"1":2}},"Spacing after string concat":{"values":{"1":2}},"Multiple statements on same line":{"values":{"no":2}}},"errorCount":2,"warningCount":0,"fixableCount":0,"numTokens":40},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/theme_config.php":{"hash":"60bbe5a8ccbaa41e81fb710bfe1e1df733188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected theme-config.php, but found theme_config.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"There must be no blank lines before the file comment","source":"Squiz.Commenting.FileComment.SpacingAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false}]},"3":{"22":[{"message":"There must be exactly one blank line after the file comment","source":"Squiz.Commenting.FileComment.SpacingAfterComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Missing @package tag in file comment","source":"Squiz.Commenting.FileComment.MissingPackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true},{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"1":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"11":{"1":[{"message":"Inline doc block comments are not allowed; use \"\/* Comment *\/\" or \"\/\/ Comment\" instead","source":"Squiz.Commenting.InlineComment.DocBlock","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Block comments must be started with \/*","source":"Squiz.Commenting.BlockComment.WrongStart","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true},{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"23":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"24":{"1":[{"message":"Inline doc block comments are not allowed; use \"\/* Comment *\/\" or \"\/\/ Comment\" instead","source":"Squiz.Commenting.InlineComment.DocBlock","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Block comments must be started with \/*","source":"Squiz.Commenting.BlockComment.WrongStart","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true},{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"15":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"47":{"1":[{"message":"Expected \/\/end defer_non_critical_css_loading()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"41":{"1":[{"message":"Missing doc comment for function defer_non_critical_css_loading()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"59":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"42":{"16":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"50":{"1":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"33":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"55":{"1":[{"message":"Expected \/\/end add_custom_admin_bar_style()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"51":{"39":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"58":{"1":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment for parameter \"$buffer\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"33":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"62":{"1":[{"message":"Expected \/\/end remove_trailing_slashes()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"59":{"45":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"66":{"1":[{"message":"Expected \/\/end start_buffering()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"64":{"1":[{"message":"Missing doc comment for function start_buffering()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"28":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"71":{"1":[{"message":"Expected \/\/end end_buffering()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"67":{"1":[{"message":"Missing doc comment for function end_buffering()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"26":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"75":{"1":[{"message":"Inline doc block comments are not allowed; use \"\/* Comment *\/\" or \"\/\/ Comment\" instead","source":"Squiz.Commenting.InlineComment.DocBlock","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Block comments must be started with \/*","source":"Squiz.Commenting.BlockComment.WrongStart","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true},{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"19":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"82":{"37":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"86":{"1":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"17":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"97":{"1":[{"message":"Expected \/\/end remove_additional_image_sizes()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"87":{"42":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"90":{"24":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"110":{"1":[{"message":"Expected \/\/end remove_default_image_sizes()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"99":{"1":[{"message":"Missing doc comment for function remove_default_image_sizes()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"47":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"100":{"21":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"104":{"20":[{"message":"Usage of Yoda conditions is not allowed; switch the expression order","source":"Generic.ControlStructures.DisallowYodaConditions.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\ControlStructures\\DisallowYodaConditionsSniff","severity":5,"fixable":false}]},"125":{"1":[{"message":"Expected \/\/end add_image_sizes()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"116":{"1":[{"message":"Missing doc comment for function add_image_sizes()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"28":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"117":{"45":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"123":{"41":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"124":{"41":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"133":{"1":[{"message":"Expected \/\/end start_output_buffering()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"128":{"1":[{"message":"Missing doc comment for function start_output_buffering()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"35":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"130":{"30":[{"message":"Usage of Yoda conditions is not allowed; switch the expression order","source":"Generic.ControlStructures.DisallowYodaConditions.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\ControlStructures\\DisallowYodaConditionsSniff","severity":5,"fixable":false}]},"170":{"1":[{"message":"Expected \/\/end modify_media_options_page()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"136":{"1":[{"message":"Missing doc comment for function modify_media_options_page()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"48":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"151":{"29":[{"message":"Variable \"$key\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false},{"message":"Variable \"$value\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"172":{"1":[{"message":"Inline doc block comments are not allowed; use \"\/* Comment *\/\" or \"\/\/ Comment\" instead","source":"Squiz.Commenting.InlineComment.DocBlock","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Block comments must be started with \/*","source":"Squiz.Commenting.BlockComment.WrongStart","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true},{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"37":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"176":{"9":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"179":{"9":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"184":{"1":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"9":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"185":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"189":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"191":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"193":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"196":{"1":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"24":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"5":[{"message":"Doc comment short description must be on the first line","source":"Generic.Commenting.DocComment.SpacingBeforeShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment short description must start with a capital letter","source":"Generic.Commenting.DocComment.ShortNotCapital","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":5,"fixable":false}]},"248":{"1":[{"message":"Expected \/\/end register_cpt()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"197":{"25":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"199":{"9":[{"message":"register_post_type() called with invalid post type \"us\u0142uga\". Post type contains invalid characters. Only lowercase alphanumeric characters, dashes, and underscores are allowed.","source":"WordPress.NamingConventions.ValidPostTypeSlug.InvalidCharacters","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidPostTypeSlugSniff","severity":5,"fixable":false}]},"200":{"9":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"201":{"32":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"210":{"32":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"212":{"32":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"220":{"9":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"221":{"31":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"230":{"31":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"235":{"9":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"236":{"31":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"245":{"31":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"257":{"1":[{"message":"Expected \/\/end plugin_mce_css()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"251":{"1":[{"message":"Missing doc comment for function plugin_mce_css()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"37":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"260":{"1":[{"message":"Function name \"myTinyMceScript\" is not in snake case format, try \"my_tiny_mce_script\"","source":"WordPress.NamingConventions.ValidFunctionName.FunctionNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function myTinyMceScript()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"28":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"262":{"1":[{"message":"Expected \/\/end myTinyMceScript()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"261":{"110":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"271":{"21":[{"message":"Usage of Yoda conditions is not allowed; switch the expression order","source":"Generic.ControlStructures.DisallowYodaConditions.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\ControlStructures\\DisallowYodaConditionsSniff","severity":5,"fixable":false}]},"283":{"1":[{"message":"Expected \/\/end myprefix_add_tinymce_plugin()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"278":{"1":[{"message":"Missing doc comment for function myprefix_add_tinymce_plugin()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"55":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"290":{"1":[{"message":"Expected \/\/end myprefix_register_mce_button()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"285":{"1":[{"message":"Missing doc comment for function myprefix_register_mce_button()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"51":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"309":{"1":[{"message":"Expected \/\/end my_acf_input_admin_footer()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"292":{"1":[{"message":"Missing doc comment for function my_acf_input_admin_footer()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"38":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"302":{"69":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_template_directory_uri'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":{"43":{"10":[{"message":"Not using strict comparison for in_array; supply true for $strict argument.","source":"WordPress.PHP.StrictInArray.MissingTrueStrict","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\StrictInArraySniff","severity":5,"fixable":false}]},"103":{"16":[{"message":"Not using strict comparison for array_search; supply true for $strict argument.","source":"WordPress.PHP.StrictInArray.MissingTrueStrict","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\StrictInArraySniff","severity":5,"fixable":false}]},"185":{"1":[{"message":"This comment is 53% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"191":{"1":[{"message":"This comment is 63% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"261":{"5":[{"message":"Resource version not set in call to wp_enqueue_script(). This means new versions of the script may not always be loaded due to browser caching.","source":"WordPress.WP.EnqueuedResourceParameters.MissingVersion","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\EnqueuedResourceParametersSniff","severity":5,"fixable":false},{"message":"In footer ($in_footer) is not set explicitly wp_enqueue_script; It is recommended to load scripts in the footer. Please set this value to `true` to load it in the footer, or explicitly `false` if it should be loaded in the header.","source":"WordPress.WP.EnqueuedResourceParameters.NotInFooter","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\EnqueuedResourceParametersSniff","severity":5,"fixable":false}]},"271":{"21":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]}},"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":19}},"Line indent":{"values":{"tabs":190}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Only function(s)":1}},"Spaces found before comma in function call":{"values":{"no spaces":63}},"Spaces found after comma in function call":{"values":{"a new line":13,"1 space":50}},"Closure opening brace placement":{"values":{"same line":8}},"PHP keyword case":{"values":{"lower":76}},"Multiple statements on same line":{"values":{"no":95}},"Spacing before string concat":{"values":{"1":6}},"Spacing after string concat":{"values":{"1":6}},"Function has doc comment":{"values":{"no":12,"yes":4}},"Function opening brace placement":{"values":{"same line":16}},"Spaces found before comma in function declaration":{"values":{"no spaces":2}},"Spaces found after comma in function declaration":{"values":{"1 space":2}},"Space after operator":{"values":{"1":65}},"Space between array keyword and open brace":{"values":{"no spaces":15}},"Space after array opener, single line array":{"values":{"1 space":8}},"Space before array closer, single line array":{"values":{"1 space":8}},"Single-line array - comma after last item":{"values":{"no":8}},"Short array syntax used":{"values":{"no":15}},"Control structure defined inline":{"values":{"no":14}},"Spaces found before comma":{"values":{"no spaces":42}},"Spaces found after comma":{"values":{"1 space":11,"a new line":24}},"PHP constant case":{"values":{"lower":11}},"Space before operator":{"values":{"1":10}},"Type of comparison used":{"values":{"strict":2,"loose":1}},"Adjacent assignments aligned":{"values":{"yes":4}},"Space after array opener, multi-line array":{"values":{"a new line":7}},"Space before array closer, multi-line array":{"values":{"a new line":7}},"Multi-line array - comma after last item":{"values":{"yes":7}}},"errorCount":138,"warningCount":7,"fixableCount":86,"numTokens":2109},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/error_reporting.php":{"hash":"b662a72d4516470e41eaabb182d9b16433188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected error-reporting.php, but found error_reporting.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"4":{"39":[{"message":"Capabilities should be used instead of roles. Found \"administrator\" in function call to user_can()","source":"WordPress.WP.Capabilities.RoleFound","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\CapabilitiesSniff","severity":5,"fixable":false}]},"8":{"5":[{"message":"Found: ini_set('display_errors', 1). Use `WP_DEBUG_DISPLAY` instead.","source":"WordPress.PHP.IniSet.display_errors_Disallowed","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\IniSetSniff","severity":5,"fixable":false}]}},"warnings":{"2":{"1":[{"message":"error_reporting() can lead to full path disclosure.","source":"WordPress.PHP.DevelopmentFunctions.prevent_path_disclosure_error_reporting","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\DevelopmentFunctionsSniff","severity":5,"fixable":false},{"message":"error_reporting() found. Changing configuration values at runtime is strongly discouraged.","source":"WordPress.PHP.DiscouragedPHPFunctions.runtime_configuration_error_reporting","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\DiscouragedPHPFunctionsSniff","severity":5,"fixable":false}]},"7":{"5":[{"message":"error_reporting() can lead to full path disclosure.","source":"WordPress.PHP.DevelopmentFunctions.prevent_path_disclosure_error_reporting","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\DevelopmentFunctionsSniff","severity":5,"fixable":false},{"message":"error_reporting() found. Changing configuration values at runtime is strongly discouraged.","source":"WordPress.PHP.DiscouragedPHPFunctions.runtime_configuration_error_reporting","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\DiscouragedPHPFunctionsSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":4}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Multiple statements on same line":{"values":{"no":7}},"Control structure defined inline":{"values":{"no":1}},"PHP keyword case":{"values":{"lower":1}},"Spaces found before comma in function call":{"values":{"no spaces":5}},"Spaces found after comma in function call":{"values":{"1 space":5}},"Constant name case":{"values":{"upper":3}},"Space after operator":{"values":{"1":1}},"PHP constant case":{"values":{"lower":1}}},"errorCount":5,"warningCount":4,"fixableCount":1,"numTokens":98},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/theme_utils.php":{"hash":"9f568837baa3ede605bf27628fc91afd33188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected theme-utils.php, but found theme_utils.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Class file names should be based on the class name with \"class-\" prepended. Expected class-buttonable.php, but found theme_utils.php.","source":"WordPress.Files.FileName.InvalidClassFileName","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"150":{"1":[{"message":"A file should either contain function declarations or OO structure declarations, but not both. Found 10 function declaration(s) and 1 OO structure declaration(s). The first function declaration was found on line 12; the first OO declaration was found on line 150","source":"Universal.Files.SeparateFunctionsFromOO.Mixed","listener":"PHPCSExtra\\Universal\\Sniffs\\Files\\SeparateFunctionsFromOOSniff","severity":5,"fixable":false},{"message":"Missing doc comment for class Buttonable","source":"Squiz.Commenting.ClassComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClassCommentSniff","severity":0,"fixable":false}],"18":[{"message":"Opening brace of a class must be on the line after the definition","source":"PSR2.Classes.ClassDeclaration.OpenBraceNewLine","listener":"PHP_CodeSniffer\\Standards\\PSR2\\Sniffs\\Classes\\ClassDeclarationSniff","severity":0,"fixable":true}]},"10":{"4":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"7":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Expected 7 spaces after parameter name; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"8":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Expected 5 spaces after parameter name; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"9":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"12":{"1":[{"message":"Function name \"GetDataByAcfFcLayoutName\" is not in snake case format, try \"get_data_by_acf_fc_layout_name\"","source":"WordPress.NamingConventions.ValidFunctionName.FunctionNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"86":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"56":[{"message":"Variable \"$fcName\" is not in valid snake_case format, try \"$fc_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"72":[{"message":"Variable \"$layoutName\" is not in valid snake_case format, try \"$layout_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"22":{"1":[{"message":"Expected \/\/end GetDataByAcfFcLayoutName()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"13":{"26":[{"message":"Variable \"$fcName\" is not in valid snake_case format, try \"$fc_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"17":{"22":[{"message":"Variable \"$fcName\" is not in valid snake_case format, try \"$fc_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"18":{"76":[{"message":"Variable \"$layoutName\" is not in valid snake_case format, try \"$layout_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"49":{"1":[{"message":"Expected \/\/end editor_notice()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"24":{"1":[{"message":"Doc comment for parameter \"$message\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$fromComponent\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"29":{"72":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"47":[{"message":"Variable \"$fromComponent\" is not in valid snake_case format, try \"$from_component\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"32":{"10":[{"message":"Variable \"$fromComponent\" is not in valid snake_case format, try \"$from_component\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"48":{"56":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$message'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}],"82":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$url'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}],"147":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$file_path'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}],"173":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$line'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"59":{"1":[{"message":"Expected \/\/end splide_script_async()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"56":{"32":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"57":{"28":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_template_directory_uri'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}],"10":[{"message":"Scripts must be registered\/enqueued via wp_enqueue_script()","source":"WordPress.WP.EnqueuedResources.NonEnqueuedScript","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\EnqueuedResourcesSniff","severity":5,"fixable":false}]},"58":{"28":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'get_template_directory_uri'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}],"10":[{"message":"Scripts must be registered\/enqueued via wp_enqueue_script()","source":"WordPress.WP.EnqueuedResources.NonEnqueuedScript","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\EnqueuedResourcesSniff","severity":5,"fixable":false}]},"66":{"4":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"64":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"65":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Expected 5 spaces after parameter name; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"76":{"1":[{"message":"Expected \/\/end dump_log()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"68":{"52":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"27":[{"message":"Variable \"$fileName\" is not in valid snake_case format, try \"$file_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"69":{"51":[{"message":"Variable \"$fileName\" is not in valid snake_case format, try \"$file_name\"","source":"WordPress.NamingConventions.ValidVariableName.InterpolatedVariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false},{"message":"Variable \"$fileName\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"72":{"5":[{"message":"The use of function print_r() is forbidden","source":"Generic.PHP.ForbiddenFunctions.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\PHP\\ForbiddenFunctionsSniff","severity":5,"fixable":false}]},"82":{"4":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"81":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"87":{"1":[{"message":"Expected \/\/end get_dev_display_year()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"84":{"47":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"36":[{"message":"Variable \"$devYear\" is not in valid snake_case format, try \"$dev_year\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"85":{"21":[{"message":"date() is affected by runtime timezone changes which can cause date\/time to be incorrectly displayed. Use gmdate() instead.","source":"WordPress.DateTime.RestrictedFunctions.date_date","listener":"WordPressCS\\WordPress\\Sniffs\\DateTime\\RestrictedFunctionsSniff","severity":5,"fixable":false}]},"86":{"28":[{"message":"Variable \"$devYear\" is not in valid snake_case format, try \"$dev_year\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"39":[{"message":"Variable \"$devYear\" is not in valid snake_case format, try \"$dev_year\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"74":[{"message":"Variable \"$devYear\" is not in valid snake_case format, try \"$dev_year\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"95":{"4":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"92":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"93":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Expected \"string\" but found \"?string\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"94":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Doc comment for parameter $slug does not match actual variable name $args","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"99":{"1":[{"message":"Expected \/\/end get_component()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"89":{"1":[{"message":"Doc comment for parameter \"$args\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"97":{"86":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"76":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"107":{"4":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"105":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]},"106":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Expected \"boolean\" but found \"bool\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must start with a capital letter","source":"Squiz.Commenting.FunctionComment.ParamCommentNotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"134":{"1":[{"message":"Expected \/\/end get_with_globals()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"109":{"76":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"35":[{"message":"Variable \"$inputString\" is not in valid snake_case format, try \"$input_string\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"54":[{"message":"Variable \"$multipleUse\" is not in valid snake_case format, try \"$multiple_use\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"110":{"5":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"113":{"5":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"114":{"36":[{"message":"Variable \"$inputString\" is not in valid snake_case format, try \"$input_string\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"116":{"13":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"117":{"13":[{"message":"Variable \"$fieldName\" is not in valid snake_case format, try \"$field_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"119":{"13":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"120":{"32":[{"message":"Variable \"$fieldName\" is not in valid snake_case format, try \"$field_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"122":{"13":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"124":{"22":[{"message":"Variable \"$multipleUse\" is not in valid snake_case format, try \"$multiple_use\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"125":{"21":[{"message":"Variable \"$inputString\" is not in valid snake_case format, try \"$input_string\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"67":[{"message":"Variable \"$inputString\" is not in valid snake_case format, try \"$input_string\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"127":{"21":[{"message":"Variable \"$inputString\" is not in valid snake_case format, try \"$input_string\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"133":{"12":[{"message":"Variable \"$inputString\" is not in valid snake_case format, try \"$input_string\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"141":{"4":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false},{"message":"Function return type is not void, but function has no return statement","source":"Squiz.Commenting.FunctionComment.InvalidNoReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"139":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"140":{"10":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"4":[{"message":"Expected 5 spaces after parameter name; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must start with a capital letter","source":"Squiz.Commenting.FunctionComment.ParamCommentNotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"148":{"1":[{"message":"Expected \/\/end try_attach_resource()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"143":{"75":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"38":[{"message":"Variable \"$fileName\" is not in valid snake_case format, try \"$file_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"144":{"5":[{"message":"Variable \"$filePath\" is not in valid snake_case format, try \"$file_path\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"57":[{"message":"Variable \"$fileName\" is not in valid snake_case format, try \"$file_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"145":{"23":[{"message":"Variable \"$filePath\" is not in valid snake_case format, try \"$file_path\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"146":{"14":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '\"<$type>\"'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false},{"message":"Variable \"$type\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}],"26":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'file_get_contents'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}],"59":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '\"<\/$type>\"'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false},{"message":"Variable \"$type\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}],"45":[{"message":"Variable \"$filePath\" is not in valid snake_case format, try \"$file_path\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"216":{"1":[{"message":"Expected \/\/end class","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"153":{"12":[{"message":"Typed properties are not supported in PHP 7.3 or earlier","source":"PHPCompatibility.Classes.NewTypedProperties.Found","listener":"PHPCompatibility\\Sniffs\\Classes\\NewTypedPropertiesSniff","severity":5,"fixable":false}],"19":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"154":{"12":[{"message":"Typed properties are not supported in PHP 7.3 or earlier","source":"PHPCompatibility.Classes.NewTypedProperties.Found","listener":"PHPCompatibility\\Sniffs\\Classes\\NewTypedPropertiesSniff","severity":5,"fixable":false}],"19":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"156":{"13":[{"message":"Typed properties are not supported in PHP 7.3 or earlier","source":"PHPCompatibility.Classes.NewTypedProperties.Found","listener":"PHPCompatibility\\Sniffs\\Classes\\NewTypedPropertiesSniff","severity":5,"fixable":false}],"20":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"157":{"13":[{"message":"Typed properties are not supported in PHP 7.3 or earlier","source":"PHPCompatibility.Classes.NewTypedProperties.Found","listener":"PHPCompatibility\\Sniffs\\Classes\\NewTypedPropertiesSniff","severity":5,"fixable":false}],"20":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"158":{"13":[{"message":"Typed properties are not supported in PHP 7.3 or earlier","source":"PHPCompatibility.Classes.NewTypedProperties.Found","listener":"PHPCompatibility\\Sniffs\\Classes\\NewTypedPropertiesSniff","severity":5,"fixable":false}],"20":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"159":{"13":[{"message":"Typed properties are not supported in PHP 7.3 or earlier","source":"PHPCompatibility.Classes.NewTypedProperties.Found","listener":"PHPCompatibility\\Sniffs\\Classes\\NewTypedPropertiesSniff","severity":5,"fixable":false}],"20":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"160":{"13":[{"message":"Typed properties are not supported in PHP 7.3 or earlier","source":"PHPCompatibility.Classes.NewTypedProperties.Found","listener":"PHPCompatibility\\Sniffs\\Classes\\NewTypedPropertiesSniff","severity":5,"fixable":false}],"20":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"162":{"19":[{"message":"Method name \"FromLink\" in class Buttonable is not in snake case format, try \"from_link\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function FromLink()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"58":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"174":{"5":[{"message":"Expected \/\/end FromLink()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"176":{"19":[{"message":"Method name \"FromButton\" in class Buttonable is not in snake case format, try \"from_button\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function FromButton()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"62":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"182":{"5":[{"message":"Expected \/\/end FromButton()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"184":{"12":[{"message":"Method name \"GetButtonClasses\" in class Buttonable is not in snake case format, try \"get_button_classes\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function GetButtonClasses()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"40":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"201":{"5":[{"message":"Expected \/\/end GetButtonClasses()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"189":{"28":[{"message":"Variable \"$style\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"203":{"12":[{"message":"Method name \"GetLinkAttributes\" in class Buttonable is not in snake case format, try \"get_link_attributes\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function GetLinkAttributes()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"41":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"215":{"5":[{"message":"Expected \/\/end GetLinkAttributes()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"218":{"1":[{"message":"Function name \"groupServiceItems\" is not in snake case format, try \"group_service_items\"","source":"WordPress.NamingConventions.ValidFunctionName.FunctionNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function groupServiceItems()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"38":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"250":{"1":[{"message":"Expected \/\/end groupServiceItems()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"219":{"18":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"220":{"5":[{"message":"Variable \"$parentMap\" is not in valid snake_case format, try \"$parent_map\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"18":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"222":{"5":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"225":{"13":[{"message":"Variable \"$groupedItem\" is not in valid snake_case format, try \"$grouped_item\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"226":{"13":[{"message":"Variable \"$groupedItem\" is not in valid snake_case format, try \"$grouped_item\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"227":{"13":[{"message":"Variable \"$groupedItem\" is not in valid snake_case format, try \"$grouped_item\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"229":{"13":[{"message":"Variable \"$groupedItem\" is not in valid snake_case format, try \"$grouped_item\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"40":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"231":{"39":[{"message":"Variable \"$groupedItem\" is not in valid snake_case format, try \"$grouped_item\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"232":{"13":[{"message":"Variable \"$parentMap\" is not in valid snake_case format, try \"$parent_map\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"236":{"5":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"238":{"48":[{"message":"Variable \"$parentMap\" is not in valid snake_case format, try \"$parent_map\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"239":{"13":[{"message":"Variable \"$parentPost\" is not in valid snake_case format, try \"$parent_post\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"39":[{"message":"Variable \"$parentMap\" is not in valid snake_case format, try \"$parent_map\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"240":{"13":[{"message":"Variable \"$childPost\" is not in valid snake_case format, try \"$child_post\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"241":{"13":[{"message":"Variable \"$childPost\" is not in valid snake_case format, try \"$child_post\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"242":{"13":[{"message":"Variable \"$childPost\" is not in valid snake_case format, try \"$child_post\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"245":{"13":[{"message":"Variable \"$parentPost\" is not in valid snake_case format, try \"$parent_post\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"36":[{"message":"Variable \"$childPost\" is not in valid snake_case format, try \"$child_post\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"252":{"1":[{"message":"Function name \"GetGlobalSectionValue\" is not in snake case format, try \"get_global_section_value\"","source":"WordPress.NamingConventions.ValidFunctionName.FunctionNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function GetGlobalSectionValue()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"79":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"40":[{"message":"Variable \"$fieldName\" is not in valid snake_case format, try \"$field_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"57":[{"message":"Variable \"$fromGlobals\" is not in valid snake_case format, try \"$from_globals\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"254":{"1":[{"message":"Expected \/\/end GetGlobalSectionValue()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"253":{"12":[{"message":"Variable \"$fromGlobals\" is not in valid snake_case format, try \"$from_globals\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"38":[{"message":"Variable \"$fieldName\" is not in valid snake_case format, try \"$field_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"79":[{"message":"Variable \"$fieldName\" is not in valid snake_case format, try \"$field_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"256":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"258":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"260":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"268":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"270":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"271":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"273":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"285":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]}},"warnings":{"30":{"11":[{"message":"debug_backtrace() found. Debug code should not normally be used in production.","source":"WordPress.PHP.DevelopmentFunctions.error_log_debug_backtrace","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\DevelopmentFunctionsSniff","severity":5,"fixable":false}]},"72":{"5":[{"message":"print_r() found. Debug code should not normally be used in production.","source":"WordPress.PHP.DevelopmentFunctions.error_log_print_r","listener":"WordPressCS\\WordPress\\Sniffs\\PHP\\DevelopmentFunctionsSniff","severity":5,"fixable":false}]},"75":{"5":[{"message":"File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: file_put_contents().","source":"WordPress.WP.AlternativeFunctions.file_system_operations_file_put_contents","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"146":{"26":[{"message":"file_get_contents() is discouraged. Use wp_remote_get() for remote URLs instead.","source":"WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"156":{"20":[{"message":"Property name \"$_url\" should not be prefixed with an underscore to indicate visibility","source":"PSR2.Classes.PropertyDeclaration.Underscore","listener":"PHP_CodeSniffer\\Standards\\PSR2\\Sniffs\\Classes\\PropertyDeclarationSniff","severity":5,"fixable":false}]},"157":{"20":[{"message":"Property name \"$_title\" should not be prefixed with an underscore to indicate visibility","source":"PSR2.Classes.PropertyDeclaration.Underscore","listener":"PHP_CodeSniffer\\Standards\\PSR2\\Sniffs\\Classes\\PropertyDeclarationSniff","severity":5,"fixable":false}]},"158":{"20":[{"message":"Property name \"$_target\" should not be prefixed with an underscore to indicate visibility","source":"PSR2.Classes.PropertyDeclaration.Underscore","listener":"PHP_CodeSniffer\\Standards\\PSR2\\Sniffs\\Classes\\PropertyDeclarationSniff","severity":5,"fixable":false}]},"159":{"20":[{"message":"Property name \"$_rel\" should not be prefixed with an underscore to indicate visibility","source":"PSR2.Classes.PropertyDeclaration.Underscore","listener":"PHP_CodeSniffer\\Standards\\PSR2\\Sniffs\\Classes\\PropertyDeclarationSniff","severity":5,"fixable":false}]},"160":{"20":[{"message":"Property name \"$_style\" should not be prefixed with an underscore to indicate visibility","source":"PSR2.Classes.PropertyDeclaration.Underscore","listener":"PHP_CodeSniffer\\Standards\\PSR2\\Sniffs\\Classes\\PropertyDeclarationSniff","severity":5,"fixable":false}]},"188":{"21":[{"message":"Loose comparisons are not allowed. Expected: \"!==\"; Found: \"!=\"","source":"Universal.Operators.StrictComparisons.LooseNotEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"191":{"25":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"195":{"25":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"224":{"33":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"238":{"33":[{"message":"Loose comparisons are not allowed. Expected: \"!==\"; Found: \"!=\"","source":"Universal.Operators.StrictComparisons.LooseNotEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"256":{"1":[{"message":"This comment is 46% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"260":{"1":[{"message":"This comment is 51% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"270":{"1":[{"message":"This comment is 58% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":135}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Both function and OO declarations":1}},"Function has doc comment":{"values":{"yes":8,"no":6}},"Function opening brace placement":{"values":{"same line":14}},"PHP type case":{"values":{"lower":26}},"PHP keyword case":{"values":{"lower":89}},"Spaces found before comma in function declaration":{"values":{"no spaces":9}},"Spaces found after comma in function declaration":{"values":{"1 space":9}},"Control structure defined inline":{"values":{"no":21}},"Space before operator":{"values":{"1":37}},"Space after operator":{"values":{"1":93}},"PHP constant case":{"values":{"lower":9}},"Multiple statements on same line":{"values":{"no":80}},"Type of comparison used":{"values":{"strict":2,"loose":5}},"Adjacent assignments aligned":{"values":{"yes":14}},"Spaces found before comma in function call":{"values":{"no spaces":14}},"Spaces found after comma in function call":{"values":{"1 space":14}},"Spacing before string concat":{"values":{"1":31}},"Spacing after string concat":{"values":{"1":31}},"Ternary usage":{"values":{"long":8}},"Space between array keyword and open brace":{"values":{"no spaces":4}},"Space between open and close brace for an empty array":{"values":{"no spaces":4}},"Short array syntax used":{"values":{"no":4}},"Class has doc comment":{"values":{"no":1}},"Class opening brace placement":{"values":{"same line":1}},"Spacing before object operator":{"values":[37]},"Spacing after object operator":{"values":[37]}},"errorCount":193,"warningCount":17,"fixableCount":62,"numTokens":2187},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/disable_search.php":{"hash":"9033b3c3cd0e0b420fa61729069acf6f33188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected disable-search.php, but found disable_search.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]}},"warnings":{"7":{"25":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":8}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"a new line":1}},"Closure opening brace placement":{"values":{"same line":1}},"PHP constant case":{"values":{"lower":3}},"PHP keyword case":{"values":{"lower":3}},"Spaces found before comma in function declaration":{"values":{"no spaces":1}},"Spaces found after comma in function declaration":{"values":{"1 space":1}},"Control structure defined inline":{"values":{"no":2}},"Space before operator":{"values":{"1":2}},"Space after operator":{"values":{"1":3}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Type of comparison used":{"values":{"loose":1}},"Multiple statements on same line":{"values":{"no":2}}},"errorCount":2,"warningCount":1,"fixableCount":1,"numTokens":83},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/cpt_config.php":{"hash":"a6a12838c1a9de98603e92ec8849f58033188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected cpt-config.php, but found cpt_config.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"6":{"9":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]}},"warnings":{"6":{"9":[{"message":"This comment is 75% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":4}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"a new line":1}},"Closure opening brace placement":{"values":{"same line":1}},"PHP keyword case":{"values":{"lower":1}},"Multiple statements on same line":{"values":{"no":1}}},"errorCount":4,"warningCount":1,"fixableCount":0,"numTokens":25},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/add_default_og_image.php":{"hash":"f867846a57cd848f13f49c9a83c8de9333188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected add-default-og-image.php, but found add_default_og_image.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"14":{"38":[{"message":"Assignments must be the first block of code on a line","source":"Squiz.PHP.DisallowMultipleAssignments.FoundInControlStructure","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\DisallowMultipleAssignmentsSniff","severity":5,"fixable":false}]}},"warnings":{"14":{"38":[{"message":"Variable assignment found within a condition. Did you mean to do a comparison ?","source":"Generic.CodeAnalysis.AssignmentInCondition.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\CodeAnalysis\\AssignmentInConditionSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":13}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Spaces found before comma in function call":{"values":{"no spaces":4}},"Spaces found after comma in function call":{"values":{"a new line":1,"1 space":3}},"Closure opening brace placement":{"values":{"same line":1}},"PHP keyword case":{"values":{"lower":5}},"Space after operator":{"values":{"1":4}},"Multiple statements on same line":{"values":{"no":5}},"PHP constant case":{"values":{"lower":1}},"Control structure defined inline":{"values":{"no":2}},"Space before operator":{"values":{"1":1}},"Spacing before string concat":{"values":{"1":2}},"Spacing after string concat":{"values":{"1":2}}},"errorCount":3,"warningCount":1,"fixableCount":0,"numTokens":135},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/cf7_config.php":{"hash":"0620756de07245e72484ab4c4e5c0a8533188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected cf7-config.php, but found cf7_config.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"11":{"1":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"13":{"1":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false},{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"33":{"1":[{"message":"Expected \/\/end cf7_select_first_options()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"15":{"1":[{"message":"You must use \"\/**\" style comments for a function comment","source":"Squiz.Commenting.FunctionComment.WrongStyle","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}],"44":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"24":{"5":[{"message":"Expected \/\/end replace_include_blank()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"16":{"5":[{"message":"Missing doc comment for function replace_include_blank()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"60":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"29":{"5":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]},"48":{"1":[{"message":"Expected \/\/end load_cf7_form_from_external_files()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"36":{"1":[{"message":"Missing doc comment for function load_cf7_form_from_external_files()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"74":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]}},"warnings":{"11":{"1":[{"message":"This comment is 60% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"44":{"31":[{"message":"file_get_contents() is discouraged. Use wp_remote_get() for remote URLs instead.","source":"WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":29}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Only function(s)":1}},"Spaces found before comma in function call":{"values":{"no spaces":22}},"Spaces found after comma in function call":{"values":{"a new line":2,"1 space":20}},"Closure opening brace placement":{"values":{"same line":1}},"PHP keyword case":{"values":{"lower":9}},"Multiple statements on same line":{"values":{"no":21}},"Function has doc comment":{"values":{"yes":1,"no":2}},"Function opening brace placement":{"values":{"same line":3}},"Spaces found before comma in function declaration":{"values":{"no spaces":3}},"Spaces found after comma in function declaration":{"values":{"1 space":3}},"Space after operator":{"values":{"1":12}},"PHP constant case":{"values":{"lower":1}},"Spacing before string concat":{"values":{"1":12}},"Spacing after string concat":{"values":{"1":12}},"Control structure defined inline":{"values":{"no":2}},"Adjacent assignments aligned":{"values":{"yes":4}},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]},"Space before operator":{"values":{"1":1}}},"errorCount":15,"warningCount":2,"fixableCount":8,"numTokens":440},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/spamguard-1.0.1\/init.php":{"hash":"94325cc88b05b6b565d0fd17c3c5d3af33188","errors":{"1":{"1":[{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"10":{"72":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'Rekurencja'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"PHP keyword case":{"values":{"lower":5}},"Magic constant case":{"values":{"uppercase":1}},"Spacing before string concat":{"values":{"1":3}},"Spacing after string concat":{"values":{"1":3}},"Multiple statements on same line":{"values":{"no":3}},"Control structure defined inline":{"values":{"no":1}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"1 space":1}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Space before operator":{"values":{"1":1}},"Space after operator":{"values":{"1":1}}},"errorCount":2,"warningCount":0,"fixableCount":0,"numTokens":92},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/spamguard-1.0.1\/src\/SpamGuard.php":{"hash":"c7dec56f6ac7a94fcee2d34af48eb75533188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected spamguard.php, but found SpamGuard.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Class file names should be based on the class name with \"class-\" prepended. Expected class-spamguard.php, but found SpamGuard.php.","source":"WordPress.Files.FileName.InvalidClassFileName","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"There must be no blank lines before the file comment","source":"Squiz.Commenting.FileComment.SpacingAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false}]},"10":{"4":[{"message":"Expected \"Squiz Pty Ltd <products@squiz.net>\" for author tag","source":"Squiz.Commenting.FileComment.IncorrectAuthor","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":true}],"11":[{"message":"Tag value for @author tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]},"13":{"2":[{"message":"Missing @subpackage tag in file comment","source":"Squiz.Commenting.FileComment.MissingSubpackageTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false},{"message":"Missing @copyright tag in file comment","source":"Squiz.Commenting.FileComment.MissingCopyrightTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"9":{"4":[{"message":"The tag in position 2 should be the @subpackage tag","source":"Squiz.Commenting.FileComment.SubpackageTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"11":{"4":[{"message":"The tag in position 4 should be the @copyright tag","source":"Squiz.Commenting.FileComment.CopyrightTagOrder","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}],"9":[{"message":"Tag value for @link tag indented incorrectly; expected 4 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]},"12":{"8":[{"message":"Tag value for @see tag indented incorrectly; expected 5 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]},"614":{"1":[{"message":"Expected \/\/end class","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"20":{"1":[{"message":"Missing doc comment for class SpamGuard","source":"Squiz.Commenting.ClassComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClassCommentSniff","severity":0,"fixable":false}],"17":[{"message":"Opening brace of a class must be on the line after the definition","source":"PSR2.Classes.ClassDeclaration.OpenBraceNewLine","listener":"PHP_CodeSniffer\\Standards\\PSR2\\Sniffs\\Classes\\ClassDeclarationSniff","severity":0,"fixable":true}]},"38":{"15":[{"message":"Missing member variable doc comment","source":"Squiz.Commenting.VariableComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":false}]},"45":{"15":[{"message":"Member variable \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"31":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"56":{"5":[{"message":"Expected \/\/end __construct()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"47":{"12":[{"message":"Missing doc comment for function __construct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"42":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"54":{"56":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"63":{"13":[{"message":"Method name \"initializeActionsAndFilters\" in class SpamGuard is not in snake case format, try \"initialize_actions_and_filters\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"58":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"76":{"5":[{"message":"Expected \/\/end initializeActionsAndFilters()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"64":{"29":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"65":{"29":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"66":{"47":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"67":{"49":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"68":{"56":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"69":{"43":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"70":{"43":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"71":{"49":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"72":{"35":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"74":{"44":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"75":{"46":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"81":{"12":[{"message":"Method name \"initializeAdminPanel\" in class SpamGuard is not in snake case format, try \"initialize_admin_panel\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"50":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"84":{"5":[{"message":"Expected \/\/end initializeAdminPanel()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"80":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"82":{"35":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"83":{"35":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"89":{"12":[{"message":"Method name \"addAdminMenu\" in class SpamGuard is not in snake case format, try \"add_admin_menu\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"42":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"91":{"5":[{"message":"Expected \/\/end addAdminMenu()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"88":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"90":{"93":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"96":{"12":[{"message":"Method name \"registerSettings\" in class SpamGuard is not in snake case format, try \"register_settings\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"46":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"100":{"5":[{"message":"Expected \/\/end registerSettings()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"95":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"99":{"73":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"105":{"12":[{"message":"Method name \"blacklistWordsField\" in class SpamGuard is not in snake case format, try \"blacklist_words_field\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"49":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"108":{"5":[{"message":"Expected \/\/end blacklistWordsField()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"104":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"116":{"12":[{"message":"Method name \"handlePostRequest\" in class SpamGuard is not in snake case format, try \"handle_post_request\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"47":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"143":{"5":[{"message":"Expected \/\/end handlePostRequest()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"117":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"118":{"14":[{"message":"Detected usage of a possibly undefined superglobal array index: $_SERVER['REQUEST_METHOD']. Use isset() or empty() to check the index exists before using it","source":"WordPress.Security.ValidatedSanitizedInput.InputNotValidated","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false}],"61":[{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"119":{"13":[{"message":"Variable \"$newWords\" is not in valid snake_case format, try \"$new_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"46":[{"message":"$_POST['new_blacklisted_words'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"120":{"27":[{"message":"Variable \"$newWords\" is not in valid snake_case format, try \"$new_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"121":{"17":[{"message":"Variable \"$newWordsArray\" is not in valid snake_case format, try \"$new_words_array\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"67":[{"message":"Variable \"$newWords\" is not in valid snake_case format, try \"$new_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"122":{"17":[{"message":"Variable \"$updatedWords\" is not in valid snake_case format, try \"$updated_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"68":[{"message":"Object property \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"82":[{"message":"Variable \"$newWordsArray\" is not in valid snake_case format, try \"$new_words_array\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"123":{"59":[{"message":"Variable \"$updatedWords\" is not in valid snake_case format, try \"$updated_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"127":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"128":{"14":[{"message":"Detected usage of a possibly undefined superglobal array index: $_SERVER['REQUEST_METHOD']. Use isset() or empty() to check the index exists before using it","source":"WordPress.Security.ValidatedSanitizedInput.InputNotValidated","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false}],"61":[{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"129":{"13":[{"message":"Variable \"$wordToDelete\" is not in valid snake_case format, try \"$word_to_delete\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"56":[{"message":"$_POST['delete_word'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"130":{"20":[{"message":"Object property \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"131":{"24":[{"message":"Object property \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"132":{"42":[{"message":"Variable \"$wordToDelete\" is not in valid snake_case format, try \"$word_to_delete\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"133":{"38":[{"message":"Variable \"$wordToDelete\" is not in valid snake_case format, try \"$word_to_delete\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"136":{"62":[{"message":"Object property \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"139":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"146":{"13":[{"message":"Method name \"updateBlacklistFile\" in class SpamGuard is not in snake case format, try \"update_blacklist_file\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function updateBlacklistFile()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"76":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"50":[{"message":"Variable \"$blacklistedWords\" is not in valid snake_case format, try \"$blacklisted_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"156":{"5":[{"message":"Expected \/\/end updateBlacklistFile()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"147":{"9":[{"message":"Variable \"$pathToIllegalFile\" is not in valid snake_case format, try \"$path_to_illegal_file\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"148":{"9":[{"message":"Variable \"$wordsArray\" is not in valid snake_case format, try \"$words_array\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"63":[{"message":"Variable \"$blacklistedWords\" is not in valid snake_case format, try \"$blacklisted_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"86":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"149":{"43":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}],"72":[{"message":"Variable \"$wordsArray\" is not in valid snake_case format, try \"$words_array\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"151":{"33":[{"message":"Variable \"$pathToIllegalFile\" is not in valid snake_case format, try \"$path_to_illegal_file\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"161":{"12":[{"message":"Method name \"loadIllegalWordsList\" in class SpamGuard is not in snake case format, try \"load_illegal_words_list\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"50":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"171":{"5":[{"message":"Expected \/\/end loadIllegalWordsList()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"160":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"162":{"9":[{"message":"Variable \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"163":{"9":[{"message":"Variable \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"32":[{"message":"Object property \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"165":{"21":[{"message":"Variable \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"170":{"16":[{"message":"Object property \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"31":[{"message":"Variable \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"176":{"12":[{"message":"Method name \"adminOptionsPage\" in class SpamGuard is not in snake case format, try \"admin_options_page\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"46":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"199":{"5":[{"message":"Expected \/\/end adminOptionsPage()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"175":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"180":{"52":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'admin_url'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false}]},"185":{"38":[{"message":"Object property \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"206":{"12":[{"message":"Method name \"loadIllegalWords\" in class SpamGuard is not in snake case format, try \"load_illegal_words\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"46":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"221":{"5":[{"message":"Expected \/\/end loadIllegalWords()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"207":{"9":[{"message":"Variable \"$pathToIllegalFile\" is not in valid snake_case format, try \"$path_to_illegal_file\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"208":{"29":[{"message":"Variable \"$pathToIllegalFile\" is not in valid snake_case format, try \"$path_to_illegal_file\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"213":{"9":[{"message":"Variable \"$jsonContents\" is not in valid snake_case format, try \"$json_contents\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"44":[{"message":"Variable \"$pathToIllegalFile\" is not in valid snake_case format, try \"$path_to_illegal_file\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"214":{"38":[{"message":"Variable \"$jsonContents\" is not in valid snake_case format, try \"$json_contents\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"217":{"20":[{"message":"Object property \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"229":{"13":[{"message":"Method name \"logEvent\" in class SpamGuard is not in snake case format, try \"log_event\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Type hint \"string\" missing for $message","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $level","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"60":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"253":{"5":[{"message":"Expected \/\/end logEvent()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"228":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"227":{"8":[{"message":"Expected 3 spaces after parameter name; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"230":{"9":[{"message":"Variable \"$logDirectory\" is not in valid snake_case format, try \"$log_directory\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"231":{"9":[{"message":"Variable \"$logFile\" is not in valid snake_case format, try \"$log_file\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"25":[{"message":"Variable \"$logDirectory\" is not in valid snake_case format, try \"$log_directory\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"233":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"234":{"24":[{"message":"Variable \"$logDirectory\" is not in valid snake_case format, try \"$log_directory\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"235":{"20":[{"message":"Variable \"$logDirectory\" is not in valid snake_case format, try \"$log_directory\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"239":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"240":{"29":[{"message":"Variable \"$logFile\" is not in valid snake_case format, try \"$log_file\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"241":{"13":[{"message":"Variable \"$fileHandle\" is not in valid snake_case format, try \"$file_handle\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"34":[{"message":"Variable \"$logFile\" is not in valid snake_case format, try \"$log_file\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"51":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"243":{"21":[{"message":"Variable \"$fileHandle\" is not in valid snake_case format, try \"$file_handle\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"246":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"247":{"9":[{"message":"Variable \"$logEntry\" is not in valid snake_case format, try \"$log_entry\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"27":[{"message":"date() is affected by runtime timezone changes which can cause date\/time to be incorrectly displayed. Use gmdate() instead.","source":"WordPress.DateTime.RestrictedFunctions.date_date","listener":"WordPressCS\\WordPress\\Sniffs\\DateTime\\RestrictedFunctionsSniff","severity":5,"fixable":false}],"51":[{"message":"Variable \"$level\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false},{"message":"Variable \"$message\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"249":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"250":{"28":[{"message":"Variable \"$logFile\" is not in valid snake_case format, try \"$log_file\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"38":[{"message":"Variable \"$logEntry\" is not in valid snake_case format, try \"$log_entry\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"261":{"13":[{"message":"Method name \"logEventToAdminPanel\" in class SpamGuard is not in snake case format, try \"log_event_to_admin_panel\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false},{"message":"Type hint \"string\" missing for $message","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Type hint \"string\" missing for $level","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"72":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"262":{"5":[{"message":"Expected \/\/end logEventToAdminPanel()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"260":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"259":{"8":[{"message":"Expected 3 spaces after parameter name; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"269":{"12":[{"message":"Method name \"createTokenTable\" in class SpamGuard is not in snake case format, try \"create_token_table\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"46":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"290":{"5":[{"message":"Expected \/\/end createTokenTable()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"267":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"270":{"9":[{"message":"Variable \"$charsetCollate\" is not in valid snake_case format, try \"$charset_collate\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"271":{"9":[{"message":"Variable \"$tableName\" is not in valid snake_case format, try \"$table_name\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"273":{"16":[{"message":"Variable \"$tableName\" is not in valid snake_case format, try \"$table_name\"","source":"WordPress.NamingConventions.ValidVariableName.InterpolatedVariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false},{"message":"Variable \"$tableName\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false},{"message":"Variable \"$charsetCollate\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"279":{"1":[{"message":"Variable \"$charsetCollate\" is not in valid snake_case format, try \"$charset_collate\"","source":"WordPress.NamingConventions.ValidVariableName.InterpolatedVariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"281":{"9":[{"message":"File is being conditionally included; use \"include_once\" instead","source":"PEAR.Files.IncludingFile.UseIncludeOnce","listener":"PHP_CodeSniffer\\Standards\\PEAR\\Sniffs\\Files\\IncludingFileSniff","severity":0,"fixable":true}]},"296":{"8":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false},{"message":"Function return type is void, but function contains return statement","source":"Squiz.Commenting.FunctionComment.InvalidReturnVoid","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"295":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"304":{"5":[{"message":"Expected \/\/end file_path_to_url()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"298":{"12":[{"message":"Type hint \"[type]\" missing for $file_path","source":"Squiz.Commenting.FunctionComment.TypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"52":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"311":{"12":[{"message":"Method name \"enqueueScripts\" in class SpamGuard is not in snake case format, try \"enqueue_scripts\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"38":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"322":{"5":[{"message":"Expected \/\/end enqueueScripts()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"313":{"96":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"318":{"13":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"327":{"5":[{"message":"Expected \/\/end load_admin_style()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"324":{"12":[{"message":"Missing doc comment for function load_admin_style()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"40":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"334":{"12":[{"message":"Method name \"enqueueStyles\" in class SpamGuard is not in snake case format, try \"enqueue_styles\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"37":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"338":{"5":[{"message":"Expected \/\/end enqueueStyles()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"336":{"91":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"337":{"85":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"344":{"8":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"343":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"346":{"12":[{"message":"Method name \"addHoneyPotField\" in class SpamGuard is not in snake case format, try \"add_honey_pot_field\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"62":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"366":{"5":[{"message":"Expected \/\/end addHoneyPotField()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"372":{"8":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"371":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"374":{"12":[{"message":"Method name \"countCapitalizedWords\" in class SpamGuard is not in snake case format, try \"count_capitalized_words\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"67":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"383":{"5":[{"message":"Expected \/\/end countCapitalizedWords()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"376":{"9":[{"message":"Variable \"$capitalizedCount\" is not in valid snake_case format, try \"$capitalized_count\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"379":{"19":[{"message":"Variable \"$capitalizedCount\" is not in valid snake_case format, try \"$capitalized_count\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"382":{"16":[{"message":"Variable \"$capitalizedCount\" is not in valid snake_case format, try \"$capitalized_count\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"390":{"12":[{"message":"Method name \"generateToken\" in class SpamGuard is not in snake case format, try \"generate_token\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"46":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"419":{"5":[{"message":"Expected \/\/end generateToken()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"389":{"6":[{"message":"Missing @throws tag in function comment","source":"Squiz.Commenting.FunctionCommentThrowTag.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentThrowTagSniff","severity":5,"fixable":false}]},"398":{"13":[{"message":"Variable \"$saltHex\" is not in valid snake_case format, try \"$salt_hex\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"399":{"13":[{"message":"Variable \"$encryptedToken\" is not in valid snake_case format, try \"$encrypted_token\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"84":[{"message":"Variable \"$saltHex\" is not in valid snake_case format, try \"$salt_hex\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"403":{"17":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"404":{"36":[{"message":"Variable \"$encryptedToken\" is not in valid snake_case format, try \"$encrypted_token\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"405":{"36":[{"message":"Variable \"$saltHex\" is not in valid snake_case format, try \"$salt_hex\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"414":{"20":[{"message":"Variable \"$encryptedToken\" is not in valid snake_case format, try \"$encrypted_token\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"426":{"12":[{"message":"Method name \"cleanupOldTokens\" in class SpamGuard is not in snake case format, try \"cleanup_old_tokens\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"46":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"429":{"5":[{"message":"Expected \/\/end cleanupOldTokens()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"428":{"29":[{"message":"Use placeholders and $wpdb->prepare(); found $this","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"36":[{"message":"Use placeholders and $wpdb->prepare(); found wpdb","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"42":[{"message":"Use placeholders and $wpdb->prepare(); found prepare","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"51":[{"message":"Use placeholders and $wpdb->prepare(); found interpolated variable {$this->wpdb->prefix} at \"DELETE FROM `{$this->wpdb->prefix}\"","source":"WordPress.DB.PreparedSQL.InterpolatedNotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false},{"message":"Variable \"$this\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}],"90":[{"message":"Use placeholders and $wpdb->prepare(); found self","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"96":[{"message":"Use placeholders and $wpdb->prepare(); found TABLE_NAME","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"135":[{"message":"Use placeholders and $wpdb->prepare(); found $expiration","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}]},"435":{"8":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"434":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"437":{"12":[{"message":"Method name \"addTokenHiddenField\" in class SpamGuard is not in snake case format, try \"add_token_hidden_field\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"71":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"48":[{"message":"Variable \"$hiddenFields\" is not in valid snake_case format, try \"$hidden_fields\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"453":{"5":[{"message":"Expected \/\/end addTokenHiddenField()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"441":{"20":[{"message":"Variable \"$hiddenFields\" is not in valid snake_case format, try \"$hidden_fields\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"443":{"30":[{"message":"Variable \"$token\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"446":{"9":[{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"449":{"9":[{"message":"Variable \"$hiddenFields\" is not in valid snake_case format, try \"$hidden_fields\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"450":{"9":[{"message":"Variable \"$hiddenFields\" is not in valid snake_case format, try \"$hidden_fields\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"39":[{"message":"Detected usage of a possibly undefined superglobal array index: $_SERVER['HTTP_USER_AGENT']. Use isset() or empty() to check the index exists before using it","source":"WordPress.Security.ValidatedSanitizedInput.InputNotValidated","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"$_SERVER['HTTP_USER_AGENT'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_SERVER['HTTP_USER_AGENT']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false}]},"452":{"16":[{"message":"Variable \"$hiddenFields\" is not in valid snake_case format, try \"$hidden_fields\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"459":{"8":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"458":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"461":{"12":[{"message":"Method name \"validateTokenAndKeywords\" in class SpamGuard is not in snake case format, try \"validate_token_and_keywords\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"66":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"482":{"5":[{"message":"Expected \/\/end validateTokenAndKeywords()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"462":{"25":[{"message":"$_POST['form_token'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_POST['form_token']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"463":{"25":[{"message":"$_POST['user_agent'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_POST['user_agent']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"464":{"25":[{"message":"$_POST['textarea-comments'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_POST['textarea-comments']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"465":{"25":[{"message":"$_POST['your-email'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_POST['your-email']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}],"49":[{"message":"Detected usage of a possibly undefined superglobal array index: $_POST['email']. Use isset() or empty() to check the index exists before using it","source":"WordPress.Security.ValidatedSanitizedInput.InputNotValidated","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"$_POST['email'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_POST['email']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"466":{"9":[{"message":"Variable \"$userIp\" is not in valid snake_case format, try \"$user_ip\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"25":[{"message":"Detected usage of a possibly undefined superglobal array index: $_SERVER['REMOTE_ADDR']. Use isset() or empty() to check the index exists before using it","source":"WordPress.Security.ValidatedSanitizedInput.InputNotValidated","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"$_SERVER['REMOTE_ADDR'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_SERVER['REMOTE_ADDR']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false}]},"468":{"9":[{"message":"There must be no blank line following an inline comment","source":"Squiz.Commenting.InlineComment.SpacingAfter","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":true}]},"477":{"30":[{"message":"Variable \"$userIp\" is not in valid snake_case format, try \"$user_ip\"","source":"WordPress.NamingConventions.ValidVariableName.InterpolatedVariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false},{"message":"Variable \"$userIp\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false},{"message":"Variable \"$user_email\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"491":{"8":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"488":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"489":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"490":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"493":{"13":[{"message":"Method name \"isSpamDetected\" in class SpamGuard is not in snake case format, try \"is_spam_detected\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"100":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"535":{"5":[{"message":"Expected \/\/end isSpamDetected()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"494":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"500":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"501":{"56":[{"message":"Detected usage of a possibly undefined superglobal array index: $_SERVER['HTTP_USER_AGENT']. Use isset() or empty() to check the index exists before using it","source":"WordPress.Security.ValidatedSanitizedInput.InputNotValidated","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false}]},"505":{"9":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"519":{"26":[{"message":"Object property \"$illegalWords\" is not in valid snake_case format, try \"$illegal_words\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"521":{"34":[{"message":"Variable \"$illegal\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"526":{"21":[{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}],"59":[{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"527":{"47":[{"message":"$_POST['confirm-phone'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_POST['confirm-phone']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"529":{"27":[{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}],"65":[{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"530":{"47":[{"message":"$_POST['confirm-email'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_POST['confirm-email']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"541":{"8":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"540":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"543":{"12":[{"message":"Method name \"invalidateTokenBeforeSendMail\" in class SpamGuard is not in snake case format, try \"invalidate_token_before_send_mail\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"80":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"59":[{"message":"Variable \"$contactForm\" is not in valid snake_case format, try \"$contact_form\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"557":{"5":[{"message":"Expected \/\/end invalidateTokenBeforeSendMail()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"544":{"26":[{"message":"$_POST['form_token'] not unslashed before sanitization. Use wp_unslash() or similar","source":"WordPress.Security.ValidatedSanitizedInput.MissingUnslash","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Detected usage of a non-sanitized input variable: $_POST['form_token']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false},{"message":"Processing form data without nonce verification.","source":"WordPress.Security.NonceVerification.Missing","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\NonceVerificationSniff","severity":5,"fixable":false}]},"545":{"9":[{"message":"Variable \"$originalToken\" is not in valid snake_case format, try \"$original_token\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"26":[{"message":"Detected usage of a non-sanitized input variable: $_SESSION['original_token']","source":"WordPress.Security.ValidatedSanitizedInput.InputNotSanitized","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\ValidatedSanitizedInputSniff","severity":5,"fixable":false}]},"547":{"28":[{"message":"Variable \"$originalToken\" is not in valid snake_case format, try \"$original_token\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"551":{"25":[{"message":"Variable \"$originalToken\" is not in valid snake_case format, try \"$original_token\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"563":{"8":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"562":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"565":{"12":[{"message":"Method name \"deleteToken\" in class SpamGuard is not in snake case format, try \"delete_token\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"56":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"568":{"5":[{"message":"Expected \/\/end deleteToken()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"566":{"26":[{"message":"Variable \"$token\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"567":{"30":[{"message":"Variable \"$this\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}],"74":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"574":{"8":[{"message":"Tag @return cannot be grouped with parameter tags in a doc comment","source":"Generic.Commenting.DocComment.NonParamGroup","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}]},"573":{"14":[{"message":"Tag value for @param tag indented incorrectly; expected 2 spaces but found 1","source":"Generic.Commenting.DocComment.TagValueIndent","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"576":{"12":[{"message":"Method name \"isTokenValid\" in class SpamGuard is not in snake case format, try \"is_token_valid\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"57":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"585":{"5":[{"message":"Expected \/\/end isTokenValid()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"577":{"41":[{"message":"Use placeholders and $wpdb->prepare(); found $this","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"48":[{"message":"Use placeholders and $wpdb->prepare(); found wpdb","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"54":[{"message":"Use placeholders and $wpdb->prepare(); found prepare","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"63":[{"message":"Use placeholders and $wpdb->prepare(); found interpolated variable {$this->wpdb->prefix} at \"SELECT * FROM `{$this->wpdb->prefix}\"","source":"WordPress.DB.PreparedSQL.InterpolatedNotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false},{"message":"Variable \"$this\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}],"104":[{"message":"Use placeholders and $wpdb->prepare(); found self","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"110":[{"message":"Use placeholders and $wpdb->prepare(); found TABLE_NAME","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}],"145":[{"message":"Use placeholders and $wpdb->prepare(); found $token","source":"WordPress.DB.PreparedSQL.NotPrepared","listener":"WordPressCS\\WordPress\\Sniffs\\DB\\PreparedSQLSniff","severity":5,"fixable":false}]},"580":{"30":[{"message":"Variable \"$token\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]},"587":{"5":[{"message":"Inline comments must start with a capital letter","source":"Squiz.Commenting.InlineComment.NotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"592":{"5":[{"message":"Inline comments must end in full-stops, exclamation marks, or question marks","source":"Squiz.Commenting.InlineComment.InvalidEndChar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\InlineCommentSniff","severity":0,"fixable":false}]},"599":{"12":[{"message":"Method name \"ajaxRegenerateToken\" in class SpamGuard is not in snake case format, try \"ajax_regenerate_token\"","source":"WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidFunctionNameSniff","severity":5,"fixable":false}],"49":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"613":{"5":[{"message":"Expected \/\/end ajaxRegenerateToken()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"600":{"9":[{"message":"Variable \"$newToken\" is not in valid snake_case format, try \"$new_token\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"602":{"14":[{"message":"Variable \"$newToken\" is not in valid snake_case format, try \"$new_token\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"604":{"17":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"606":{"34":[{"message":"Variable \"$newToken\" is not in valid snake_case format, try \"$new_token\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"610":{"31":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]}},"warnings":{"118":{"41":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"128":{"41":[{"message":"Loose comparisons are not allowed. Expected: \"===\"; Found: \"==\"","source":"Universal.Operators.StrictComparisons.LooseEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]},"141":{"9":[{"message":"wp_redirect() found. Using wp_safe_redirect(), along with the \"allowed_redirect_hosts\" filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed.","source":"WordPress.Security.SafeRedirect.wp_redirect_wp_redirect","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\SafeRedirectSniff","severity":5,"fixable":false}]},"149":{"30":[{"message":"json_encode() is discouraged. Use wp_json_encode() instead.","source":"WordPress.WP.AlternativeFunctions.json_encode_json_encode","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"151":{"14":[{"message":"File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: file_put_contents().","source":"WordPress.WP.AlternativeFunctions.file_system_operations_file_put_contents","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"213":{"25":[{"message":"file_get_contents() is discouraged. Use wp_remote_get() for remote URLs instead.","source":"WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"235":{"13":[{"message":"File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: mkdir().","source":"WordPress.WP.AlternativeFunctions.file_system_operations_mkdir","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"241":{"27":[{"message":"File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: fopen().","source":"WordPress.WP.AlternativeFunctions.file_system_operations_fopen","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"243":{"13":[{"message":"File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: fclose().","source":"WordPress.WP.AlternativeFunctions.file_system_operations_fclose","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"250":{"9":[{"message":"File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: file_put_contents().","source":"WordPress.WP.AlternativeFunctions.file_system_operations_file_put_contents","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"446":{"9":[{"message":"This comment is 84% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"468":{"9":[{"message":"This comment is 84% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"543":{"12":[{"message":"The method parameter $contactForm is never used","source":"Generic.CodeAnalysis.UnusedFunctionParameter.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\CodeAnalysis\\UnusedFunctionParameterSniff","severity":5,"fixable":false}]},"587":{"5":[{"message":"This comment is 44% valid code; is this commented out code?","source":"Squiz.PHP.CommentedOutCode.Found","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\PHP\\CommentedOutCodeSniff","severity":5,"fixable":false}]},"603":{"18":[{"message":"json_encode() is discouraged. Use wp_json_encode() instead.","source":"WordPress.WP.AlternativeFunctions.json_encode_json_encode","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]},"610":{"18":[{"message":"json_encode() is discouraged. Use wp_json_encode() instead.","source":"WordPress.WP.AlternativeFunctions.json_encode_json_encode","listener":"WordPressCS\\WordPress\\Sniffs\\WP\\AlternativeFunctionsSniff","severity":5,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":19}},"Line indent":{"values":{"tabs":489}},"EOL char":{"values":{"\\n":1}},"Functions or OO declarations ?":{"values":{"Only OO structure(s)":1}},"Namespace declaration using curly brace syntax":{"values":{"no":1}},"Namespace declaration declares a name":{"values":{"yes":1}},"PHP keyword case":{"values":{"lower":193}},"Multiple statements on same line":{"values":{"no":164}},"Space after \"use\" keyword in import use statement":{"values":{"1 space":2}},"Import use with leading backslash":{"values":{"no":2}},"Import use statement type":{"values":{"single import":2}},"Class has doc comment":{"values":{"no":1}},"Class opening brace placement":{"values":{"same line":1}},"Constant name case":{"values":{"upper":2}},"Space after operator":{"values":{"1":111}},"Space between array keyword and open brace":{"values":{"no spaces":26}},"Space between open and close brace for an empty array":{"values":{"no spaces":4}},"Short array syntax used":{"values":{"no":26}},"Function has doc comment":{"values":{"no":3,"yes":26}},"Function opening brace placement":{"values":{"same line":29}},"Spacing before object operator":{"values":[79]},"Spacing after object operator":{"values":[79]},"Control structure defined inline":{"values":{"no":35}},"Spaces found before comma in function call":{"values":{"no spaces":96}},"Spaces found after comma in function call":{"values":{"1 space":92,"a new line":4}},"Space after array opener, single line array":{"values":{"1 space":19}},"Space before array closer, single line array":{"values":{"1 space":19}},"Single-line array - comma after last item":{"values":{"no":19}},"Spaces found before comma":{"values":{"no spaces":22}},"Spaces found after comma":{"values":{"1 space":16,"a new line":3}},"PHP type case":{"values":{"lower":33}},"PHP constant case":{"values":{"lower":27}},"Spacing before string concat":{"values":{"1":33}},"Spacing after string concat":{"values":{"1":33}},"Space before operator":{"values":{"1":43}},"Type of comparison used":{"values":{"loose":2,"strict":6}},"Adjacent assignments aligned":{"values":{"yes":13}},"Closure opening brace placement":{"values":{"same line":1}},"Magic constant case":{"values":{"uppercase":7}},"Spaces found before comma in function declaration":{"values":{"no spaces":4}},"Spaces found after comma in function declaration":{"values":{"1 space":4}},"Space after array opener, multi-line array":{"values":{"a new line":3}},"Space before array closer, multi-line array":{"values":{"a new line":3}},"Multi-line array - comma after last item":{"values":{"yes":3}},"Spacing between in\/decrementor and variable":{"values":[1]},"In\/decrement usage in stand-alone statements":{"values":{"pre-increment":1}},"Use of ELSE IF or ELSEIF":{"values":{"elseif":1}}},"errorCount":342,"warningCount":16,"fixableCount":109,"numTokens":4684},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/login_page_config.php":{"hash":"7844aa39d88e9f59a39017893ae12d1433188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected login-page-config.php, but found login_page_config.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"12":{"14":[{"message":"All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '\"<style>\n'.","source":"WordPress.Security.EscapeOutput.OutputNotEscaped","listener":"WordPressCS\\WordPress\\Sniffs\\Security\\EscapeOutputSniff","severity":5,"fixable":false},{"message":"Variable \"$login_page_bg\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false},{"message":"Variable \"$login_page_logo\" not allowed in double quoted string; use concatenation instead","source":"Squiz.Strings.DoubleQuoteUsage.ContainsVar","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Strings\\DoubleQuoteUsageSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":6}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Spaces found before comma in function call":{"values":{"no spaces":3}},"Spaces found after comma in function call":{"values":{"1 space":2,"a new line":1}},"PHP keyword case":{"values":{"lower":4}},"Multiple statements on same line":{"values":{"no":6}},"Closure opening brace placement":{"values":{"same line":1}},"Space after operator":{"values":{"1":2}},"Adjacent assignments aligned":{"values":{"yes":1}}},"errorCount":5,"warningCount":0,"fixableCount":0,"numTokens":116},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/smtp_config.php":{"hash":"8bee4f8194a4df312e2c501efc26f89833188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected smtp-config.php, but found smtp_config.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"13":{"1":[{"message":"Expected \/\/end mailer_szybkieseo()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"3":{"1":[{"message":"Missing doc comment for function mailer_szybkieseo()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"42":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}]},"5":{"17":[{"message":"Object property \"$Host\" is not in valid snake_case format, try \"$host\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"6":{"17":[{"message":"Object property \"$SMTPAuth\" is not in valid snake_case format, try \"$s_m_t_p_auth\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"7":{"17":[{"message":"Object property \"$Port\" is not in valid snake_case format, try \"$port\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"8":{"17":[{"message":"Object property \"$Username\" is not in valid snake_case format, try \"$username\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"9":{"17":[{"message":"Object property \"$Password\" is not in valid snake_case format, try \"$password\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"10":{"17":[{"message":"Object property \"$SMTPSecure\" is not in valid snake_case format, try \"$s_m_t_p_secure\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"11":{"17":[{"message":"Object property \"$From\" is not in valid snake_case format, try \"$from\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"12":{"17":[{"message":"Object property \"$FromName\" is not in valid snake_case format, try \"$from_name\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":9}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Only function(s)":1}},"Function has doc comment":{"values":{"no":1}},"Function opening brace placement":{"values":{"same line":1}},"PHP keyword case":{"values":{"lower":1}},"Spacing before object operator":{"values":[9]},"Spacing after object operator":{"values":[9]},"Multiple statements on same line":{"values":{"no":10}},"Space after operator":{"values":{"1":8}},"Adjacent assignments aligned":{"values":{"yes":1}},"PHP constant case":{"values":{"lower":1}},"Spaces found before comma in function call":{"values":{"no spaces":1}},"Spaces found after comma in function call":{"values":{"1 space":1}}},"errorCount":13,"warningCount":0,"fixableCount":2,"numTokens":115},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/enable_svg.php":{"hash":"0c1d490797c7e0f586b2b0eebe9116a933188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected enable-svg.php, but found enable_svg.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"14":{"16":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]}},"warnings":{"5":{"5":[{"message":"The method parameter $file is never used","source":"Generic.CodeAnalysis.UnusedFunctionParameter.FoundBeforeLastUsed","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\CodeAnalysis\\UnusedFunctionParameterSniff","severity":0,"fixable":false}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":24}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Spaces found before comma in function call":{"values":{"no spaces":6}},"Spaces found after comma in function call":{"values":{"a new line":5,"1 space":1}},"Closure opening brace placement":{"values":{"same line":3}},"PHP keyword case":{"values":{"lower":10}},"Spaces found before comma in function declaration":{"values":{"no spaces":3}},"Spaces found after comma in function declaration":{"values":{"1 space":3}},"Multiple statements on same line":{"values":{"no":10}},"Control structure defined inline":{"values":{"no":1}},"Space before operator":{"values":{"1":1}},"Space after operator":{"values":{"1":6}},"Type of comparison used":{"values":{"strict":1}},"Space between array keyword and open brace":{"values":{"no spaces":1}},"Space after array opener, multi-line array":{"values":{"a new line":1}},"Space before array closer, multi-line array":{"values":{"a new line":1}},"Multi-line array - comma after last item":{"values":{"yes":1}},"Short array syntax used":{"values":{"no":1}},"Spaces found before comma":{"values":{"no spaces":3}},"Spaces found after comma":{"values":{"a new line":2}}},"errorCount":3,"warningCount":1,"fixableCount":1,"numTokens":210},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/functions\/nav_menus_config.php":{"hash":"6446933e7fde6c0f858c18beb03b437933188","errors":{"1":{"1":[{"message":"Filenames should be all lowercase with hyphens as word separators. Expected nav-menus-config.php, but found nav_menus_config.php.","source":"WordPress.Files.FileName.NotHyphenatedLowercase","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Class file names should be based on the class name with \"class-\" prepended. Expected class-customnavmenu.php, but found nav_menus_config.php.","source":"WordPress.Files.FileName.InvalidClassFileName","listener":"WordPressCS\\WordPress\\Sniffs\\Files\\FileNameSniff","severity":0,"fixable":false},{"message":"Missing file doc comment","source":"Squiz.Commenting.FileComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":0,"fixable":false}]},"7":{"13":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"62":{"1":[{"message":"Expected \/\/end class","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"17":{"1":[{"message":"Missing doc comment for class CustomNavMenu","source":"Squiz.Commenting.ClassComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClassCommentSniff","severity":0,"fixable":false}],"45":[{"message":"Opening brace of a class must be on the line after the definition","source":"PSR2.Classes.ClassDeclaration.OpenBraceNewLine","listener":"PHP_CodeSniffer\\Standards\\PSR2\\Sniffs\\Classes\\ClassDeclarationSniff","severity":0,"fixable":true}]},"19":{"5":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Missing short description in doc comment","source":"Generic.Commenting.DocComment.MissingShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}],"48":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]},"22":{"5":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Missing short description in doc comment","source":"Generic.Commenting.DocComment.MissingShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}],"46":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]},"23":{"13":[{"message":"Member variable \"$liClass\" is not in valid snake_case format, try \"$li_class\"","source":"WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"25":{"5":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Missing short description in doc comment","source":"Generic.Commenting.DocComment.MissingShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}],"45":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}]},"26":{"13":[{"message":"Member variable \"$aClass\" is not in valid snake_case format, try \"$a_class\"","source":"WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"28":{"5":[{"message":"The open comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentAfterOpen","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true},{"message":"Missing short description in doc comment","source":"Generic.Commenting.DocComment.MissingShort","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":false}],"47":[{"message":"The close comment tag must be the only content on the line","source":"Generic.Commenting.DocComment.ContentBeforeClose","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Commenting\\DocCommentSniff","severity":0,"fixable":true}],"9":[{"message":"Expected \"boolean\" but found \"bool\" for @var tag in member variable comment","source":"Squiz.Commenting.VariableComment.IncorrectVarType","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\VariableCommentSniff","severity":0,"fixable":true}]},"29":{"13":[{"message":"Member variable \"$submenuSupport\" is not in valid snake_case format, try \"$submenu_support\"","source":"WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"44":{"5":[{"message":"Expected \/\/end __construct()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"34":{"8":[{"message":"Expected 11 spaces after parameter name; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"35":{"8":[{"message":"Expected 8 spaces after parameter name; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"36":{"8":[{"message":"Expected 9 spaces after parameter name; 1 found","source":"Squiz.Commenting.FunctionComment.SpacingAfterParamName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"39":{"5":[{"message":"Expected type hint \"string\"; found \"bool\" for $submenuSupport","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false},{"message":"Visibility must be declared on method \"__construct\"","source":"Squiz.Scope.MethodScope.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Scope\\MethodScopeSniff","severity":5,"fixable":false}],"144":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"64":[{"message":"Variable \"$liClass\" is not in valid snake_case format, try \"$li_class\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"93":[{"message":"Variable \"$aClass\" is not in valid snake_case format, try \"$a_class\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"118":[{"message":"Variable \"$submenuSupport\" is not in valid snake_case format, try \"$submenu_support\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"37":{"8":[{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":5,"fixable":false}]},"41":{"16":[{"message":"Object property \"$liClass\" is not in valid snake_case format, try \"$li_class\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"33":[{"message":"Variable \"$liClass\" is not in valid snake_case format, try \"$li_class\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"42":{"16":[{"message":"Object property \"$aClass\" is not in valid snake_case format, try \"$a_class\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"33":[{"message":"Variable \"$aClass\" is not in valid snake_case format, try \"$a_class\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"43":{"16":[{"message":"Object property \"$submenuSupport\" is not in valid snake_case format, try \"$submenu_support\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"33":[{"message":"Variable \"$submenuSupport\" is not in valid snake_case format, try \"$submenu_support\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"61":{"5":[{"message":"Expected \/\/end start_el()","source":"Squiz.Commenting.ClosingDeclarationComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\ClosingDeclarationCommentSniff","severity":0,"fixable":true}]},"46":{"5":[{"message":"Missing doc comment for function start_el()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Visibility must be declared on method \"start_el\"","source":"Squiz.Scope.MethodScope.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Scope\\MethodScopeSniff","severity":5,"fixable":false}],"80":[{"message":"Opening brace should be on a new line","source":"Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Functions\\MultiLineFunctionDeclarationSniff","severity":0,"fixable":true}],"61":[{"message":"Short array syntax must be used to define arrays","source":"Generic.Arrays.DisallowLongArraySyntax.Found","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Arrays\\DisallowLongArraySyntaxSniff","severity":5,"fixable":true}]},"47":{"9":[{"message":"Variable \"$isEmpty\" is not in valid snake_case format, try \"$is_empty\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"48":{"9":[{"message":"Variable \"$linkClasses\" is not in valid snake_case format, try \"$link_classes\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"167":[{"message":"Object property \"$aClass\" is not in valid snake_case format, try \"$a_class\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"50":{"177":[{"message":"Object property \"$liClass\" is not in valid snake_case format, try \"$li_class\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"51":{"20":[{"message":"Variable \"$isEmpty\" is not in valid snake_case format, try \"$is_empty\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"46":[{"message":"Variable \"$linkClasses\" is not in valid snake_case format, try \"$link_classes\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}],"112":[{"message":"Variable \"$linkClasses\" is not in valid snake_case format, try \"$link_classes\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"54":{"21":[{"message":"Object property \"$submenuSupport\" is not in valid snake_case format, try \"$submenu_support\"","source":"WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]},"58":{"20":[{"message":"Variable \"$isEmpty\" is not in valid snake_case format, try \"$is_empty\"","source":"WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase","listener":"WordPressCS\\WordPress\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":5,"fixable":false}]}},"warnings":{"46":{"5":[{"message":"The method parameter $id is never used","source":"Generic.CodeAnalysis.UnusedFunctionParameter.FoundInExtendedClassAfterLastUsed","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\CodeAnalysis\\UnusedFunctionParameterSniff","severity":0,"fixable":false}]},"47":{"51":[{"message":"Loose comparisons are not allowed. Expected: \"!==\"; Found: \"!=\"","source":"Universal.Operators.StrictComparisons.LooseNotEqual","listener":"PHPCSExtra\\Universal\\Sniffs\\Operators\\StrictComparisonsSniff","severity":5,"fixable":true}]}},"metrics":{"File has doc comment":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"Line indent":{"values":{"tabs":45}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Only OO structure(s)":1}},"Spaces found before comma in function call":{"values":{"no spaces":3}},"Spaces found after comma in function call":{"values":{"a new line":1,"1 space":2}},"Closure opening brace placement":{"values":{"same line":1}},"PHP keyword case":{"values":{"lower":16}},"Space between array keyword and open brace":{"values":{"no spaces":2}},"Space after array opener, multi-line array":{"values":{"a new line":1}},"Space before array closer, multi-line array":{"values":{"a new line":1}},"Multi-line array - comma after last item":{"values":{"yes":1}},"Short array syntax used":{"values":{"no":2}},"Space after operator":{"values":{"1":27}},"Spaces found before comma":{"values":{"no spaces":4}},"Spaces found after comma":{"values":{"a new line":3}},"Multiple statements on same line":{"values":{"no":18}},"Class has doc comment":{"values":{"no":1}},"Class opening brace placement":{"values":{"same line":1}},"Function has doc comment":{"values":{"yes":1,"no":1}},"Function opening brace placement":{"values":{"same line":2}},"PHP type case":{"values":{"lower":4}},"PHP constant case":{"values":{"lower":1}},"Spaces found before comma in function declaration":{"values":{"no spaces":7}},"Spaces found after comma in function declaration":{"values":{"1 space":7}},"Spacing before object operator":{"values":[24]},"Spacing after object operator":{"values":[24]},"Adjacent assignments aligned":{"values":{"yes":3}},"Space between open and close brace for an empty array":{"values":{"no spaces":1}},"Space before operator":{"values":{"1":12}},"Type of comparison used":{"values":{"loose":1}},"Spacing before string concat":{"values":{"1":24}},"Spacing after string concat":{"values":{"1":24}},"Ternary usage":{"values":{"long":4}},"Control structure defined inline":{"values":{"no":1}}},"errorCount":57,"warningCount":2,"fixableCount":21,"numTokens":628},"\/Users\/KRN\/Desktop\/work\/wilmed\/src\/templates\/template-main-page.php":{"hash":"e08ef02e5224aebd0620029b6ba8fd5d33188","errors":{"1":{"7":[{"message":"You must use \"\/**\" style comments for a file comment","source":"Squiz.Commenting.FileComment.WrongStyle","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FileCommentSniff","severity":5,"fixable":false},{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}],"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":0,"fixable":true}]},"3":{"1":[{"message":"Single line block comment not allowed; use inline (\"\/\/ text\") comment instead","source":"Squiz.Commenting.BlockComment.SingleLine","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\BlockCommentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"File has doc comment":{"values":{"yes":1}},"PHP short open tag used":{"values":{"no":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"Functions or OO declarations ?":{"values":{"Neither":1}},"Multiple statements on same line":{"values":{"no":3}}},"errorCount":4,"warningCount":0,"fixableCount":3,"numTokens":24}}